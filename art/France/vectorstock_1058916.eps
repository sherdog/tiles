%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 15.0.2
%%For: (Alena) ()
%%Title: (285.eps)
%%CreationDate: 11/5/2012 3:01 PM
%%Canvassize: 16383
%%BoundingBox: -304 -1294 1111 -281
%%HiResBoundingBox: -303.3135 -1293.4658 1110.8809 -281.5674
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_screens_AI5 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_pattern_AI5 1.0 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI3_IncludePlacedImages
%AI7_ImageSettings: 1
%%CMYKProcessColor: 1 1 1 1 ([Registration])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 1 0 () 
%AI3_TemplateBox: 402.4316 -786.4219 402.4316 -786.4219
%AI3_TileBox: -1.48975 -1068.8945 811.6299 -502.4941
%AI3_DocumentPreview: Header
%AI5_ArtSize: 1444.7568 1021.5439
%AI5_RulerUnits: 6
%AI5_ArtFlags: 0 0 0 1 0 0 0 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI8_OpenToView: -755 -57 0.5 1594 878 18 1 0 73 119 0 0
%AI5_OpenViewLayers: 7
%%PageOrigin:194 -896
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI12_CMSettings: 00.MS
%AI7_Thumbnail: 128 92 8
%%BeginData: 26032 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45A0A0C9A0C8A0C29FC2A0C29FC8A0C2A0C8A0C8999FA0C8A0A0A0C8
%99C8A0A0A0C8A0C9A0C29FA0A0C89FA0A0C8A0A0A0C8A0C8A0C2A0C89FC2
%A0A09FC2A0A09FC8A0C2A0C8A0C89FC2A0C8A0C8A0C89FC29FC2A0C9A0C8
%A0C2A0C29FC99FA0A0C89F999FC8A0C8A0C2A0C29FC8A0A09FC8A0C2A0C8
%A0C8A0C9A0C89FC2A0C89F99C2A0A0A0C29FA099C29F9F9FC89FA0A0C2A0
%9975C2A0A099A0A09FA0A099A0A0C2A0A099A099A0A0A09FA0A0C299A0A0
%C2A0A09FC2A09F9FC299A099C8999FA0C29FA0A0C2A0A099C2A0A0A0C2A0
%A099A09FA0A0C2A0A099C29F9FA0A099A0A0A0759FA0C2A0A09FC89F9F9F
%A099A09FFD04A0C2A0A0A0C2A0A099C2FD04A0C9A0C2A0C29FA0A0C29FC2
%A0C2A0C2A0C8999FA0C8A09F9FC89FC29FA0A0C2A0C9A0A09FA0A0C89FC2
%A0C8A0C2A0C8A0C8A0A0A0C89FA0A0A09FA0A0A09FC8A0C2A0C2A0C8A0A0
%A0C8A0C2A0C8A0A09FC2A0C8A0C8A0A0A0C29FC89FA0A0C89F9F9FC8A0C8
%A0A0A0C29FC29FA09FC29FC2A0C2A0C8A0C8A0C8A0A0A0C8A099A0A0C2A0
%A09FA099A09FA09FA099A0A0A09F9F75A09FA099A09F9FA0A099FD04A0C2
%99A099A0A0A099A0A0A099A0A0A09FA09FA09F9F9FA099A099A099A0A0A0
%9FA0A0A09FA099A09FA0A0A09FA099A099C2A0A09FA099A099A0A0A099A0
%A0A074A0A0A09FA099A09FA09FA099A09FA09FA0A0A09FA0A0A09FA099A0
%9FA0A0A0C9A0C8A0C29FA0A0C29FC2A0C2A0C8A0C8999FA0C8A0A0A0C89F
%C8A0A0A0C8A0C9A0A09FC2A0C89FC2A0C8A0C2A0C8A0C8A0C2A0C89FC2A0
%C29FA0A0C29FC8A0C2A0C8A0C8A0A0A0C8A0C8A0C8A0A09FC2A0C9A0C8A0
%A0A0C29FC89FC2A0C89F9F9FC8A0C8A0A0A0C29FC2A0C2A0C29FC2A0C8A0
%C8A0C8A0C8A0A0A0C8A099A0A0C2A0A09FA09FA09FA0A0A09FC2A0A09F9F
%99A0A0C299A09FA0A0A099C2A0A0A0C89FA099C2A0A099C2A0A099C2A0A0
%A0C29FA09FA09FA099A099A099A0A0A09FC2FD04A099A0A0C2FD04A09FA0
%99C8FD04A099A09FA0A0A099C2A0A074FD05A099C89FA09FA099A09FA09F
%C2FD08A099A09FA0A0A0C8A0C8A0A09FC2A0A09FC8A0A0A0C8A0C2999FA0
%C8A0A0A0C299C8A09F9FC8A0C9A0A09FA0A0C8A0A0A0C8A0A0A0C8A0C2A0
%C2A0C299C2A0A09FA0A0A09FC8A0A0A0C8A0C89FC2A0C2A0C8A0C89FC29F
%A0A0C9A0C89FA0A0A09FC89FA0A0C89F9999C8A0C89FA0A0C29FC2A0A09F
%C2A0A0A0C8A0C89FC8A0C89FC2A0C29F99A0A0A09FA09FA099A09F9F9FC2
%9FA09FA0A09975A0A0A099A0A09F9FA099A09FA0A0A099A099A09FA099A0
%9FA099A09FA0A0A099A0A09F9FA0999F99C2999F9FA09FA09FA0A0A099A0
%A0A09FC2A0A099A099FD05A099A09F9FA0A099A0A0A0759FA0A0A09F99C8
%9F9F9FA099A09FA09FA09FFD07A099FD05A0C9A0C8A0C29FC2A0C29FC8A0
%C2A0C8A0C8999FA0C8A0A0A0C899C8A0A09FC8A0C9A0C29FA0A0C8A0A0A0
%C8A0C2A0C8A0C8A0C2A0C89FC2A0A09FC2A0A09FC8A0C2A0C8A0C8A0C2A0
%C8A0C8A0C89FC2A0A0A0C9A0C89FC2A0C29FC9A0A0A0C89F999FC8A0C89F
%C2A0C29FC8A0A09FC8A0C2A0C8A0C8A0C9A0C8A0C2A0C89F99C2A0A0A0C2
%9FA099C29F9F9FC89FA0A0C2A09F75C2A0A099C2A09F9FC29F9F9FC8A0A0
%99A099A0A0A099A0A0C29FA0A0C2A0A09FC2A09F9FC299A099C8999FA0C2
%9FA0A0C2A0A099C2A0A0A0C2A0A099A09FA0A0C2A0A099C29F9FA0A099A0
%A0A0759FA0C2A0A099C89F9F9FA099A09FA09FA0A0C2A0A0A0C2A0A09FC2
%FD04A0C9A0C2A0C29FA0A0C29FC2A0C2A0C2A0C8999FA0C8A09FA0C89FC2
%A0C89FA0A0C9A0A09FA0A0C89FC2A0C2A0C8A0C2A0C8A0A0A0C89FA0A0A0
%9FA0A0A09FC2A0C2A0C2A0C8A0A0A0C8A0C8A0C8A0A09FC2A0C8A0C89FA0
%A0C29FC89FA0A0C89F9F9FC8A0C89FA0A0C29FC29FA09FC29FC2A0C2A0C8
%A0C8A0C8A0C29FC8A099A0A0C2A0A09FA099A09FA09FA09FA0A0A09F9F75
%A09FA099A09F9FA0A09F9F9FA0A0C2999F99A0A0A099A0A0A09FA09FA09F
%A09FA09F9F9FA099A099A0999FA0A09FA0A0A09FA099A09FA0A0A09FA099
%9F99C8A0A09FA099A0999FA0A099A0A0A074A0A0A09FA099C89FA09FA099
%A09FA099A0A0A09FA0A0A09FA0A0A09FA0A0A0C9A0C8A0C29FA0A0C29FC8
%A0C2A0C8A0C8999FA0C8A0A0A0C89FC8A0C89FC8A0C9A0A09FA0A0C8A0C2
%A0C8A0C8A0C2A0C8A0C2A0C89FC2A0C29FA0A0C29FC8A0C8A0C8A0C8A0A0
%A0C8A0C8A0C8A0A09FA0A0C9A0C89FC2A0C29FC89FC2A0C89F9F9FC8A0C8
%9FA0A0C89FC2A0C2A0C29FC2A0C8A0C8A0C9A0C8A0C89FC8A099A0A0C2A0
%A09FA09FA09FA0A0A09FC2A0A0A09F99A0A0A099A09FA0A0A099FD04A0C8
%99A099C2A0A099C2FD04A09FA0A0C29FA0A0A09FA099A099A0999FA0A09F
%C2A0A0A0C29FA0A0C2FD04A0999F99C8A0A09F9F9FA09FA0A0A099C2A0A0
%74FD05A09FC89FA09FA099A09FA099A0A0A09FC8A0A09FC2A0A09FA0A0A0
%C9A0C8A0A09FC2A0A09FC8A0A0A0C8A0C299A0A0C89FA0A0C299C8A0A09F
%C8A0C9A0A09FA0A0C8A0A0A0C8A0C29FC2A0C2A0C2A0C299C2A0A09FA0A0
%A099C8A0C2A0C8A0C2A0C2A0C2A0C8A0C89FA09FA0A0C9A0C299C8A0A099
%C89FA0A0C89F9999C8A0C89FC2A0C29FC2A0A09FC2A0A09FC8A0C2A0C9A0
%C2A0C2A0C29F99A0A0A09FA09FA099A09F9F9FC29FA09FA09F9975A0A0A0
%75A09F9F9FA099A09FC2A0A099A099A09FA099A09FA09FA09FA0A0A099A0
%A09F99A0999F99C89F9F9FA09FA09FA0A0A099FD04A0C2A0A0999F99A0A0
%A09F9F9FA09F9FA0A099A0A0A0759FFD04A099C89F9F9FA099A09FA099A0
%9FFD07A099A09FA0A0A0C9A0C8A0C29FC2A0C29FC8A0C2A0C8A0C299C2A0
%C89FA0A0C899C8A0A0A0C8A0C9A0C29FA0A0C8A0A0A0C89FC29FC8A0C8A0
%C2A0C89FC2A0A09FC2A0A099C8A0C2A0C8A0C8A0C2A0C8A0C9A0C89FC29F
%9FA0C9A0C29FC8A0C299C89FA0A0C89F999FC8A0C89FC2A0C29FC8A0A09F
%C8A0A09FC8A0C8A0C9A0C29FC29FC89F99C2A0A0A0C29FA099C29F9FA0C2
%9FA0A0C89F9999C8A0A099C2A09FA0A099A09FC2A0A099A099A0A0C29FA0
%99A09FA0A0C2A0A09FC2A09F9FC299A099C89F9F9FC29FA0A0C2A0A09FC2
%A0A0A0C8A0A099A099A0A0C89F9FA0C29F9FA0A09FA0A0A0759FA0C2A0A0
%9FC89F9F9FA099A09FA099A09FC2A0C2A0C29FA099FD05A0C9A0C2A0C29F
%A0A0C29FC8A0C2A0C2A0A099A0A0C89F9FA0C89FC89FA0A0C2A0C9A0A09F
%A0A0C8A0C2A0A09FA0A0C8A0C8A0A0A0C89FA0A0A09FA0A0C299C2A0C2A0
%C2A0C8A0A0A0C8A0C8A0C8A0A09F9FA0C9A0A09FC8A0C29FC89FC2A0C89F
%9F9FC8A0C8A0A0A0C29FC29FA09FC29FA09FC2A0C8A0C99FA09FA0A0C8A0
%99FD05A09FA099A09FA0A0A099A0A0A099999FA0A0A099A09F9FA0A099FD
%04A0C8999F99A0A0A099A0999F99A0A0A09FA09FA09FA09FA099A099A099
%9F9FA099A0A0A09FA09FA09FA0A0A09FA0999F75A0A0A099A0A0A0999FA0
%9F99A0A0A074A0A0A09FA09FC29FA09FA099A09FA099A09FA09FC8A0A099
%A09FA09FA0A0A0C9A0C8A0C29FA0A0C29FC8A0C2A0C8A0A099C2A0C89FA0
%A0C89FC89FC2A0C8A0C9A0A09FA0A0C8A0C2A0A09FC2A0C8A0C8A0C2A0C8
%9FA0A0C29FA0A0C299C2A0C2A0C8A0C8A0C2A0C8A0C8A0C8A0A09FA0A0C9
%A0C2A0C8A0C29FC89FC2A0C89F9F9FC8A0C8A0C2A0C29FC2A0C2A0C2A0C2
%9FC2A0C8A0C9A0C29FC2A0C8A099A0A0C2A0A09FA09FA09FA0A0A099C2A0
%A0759FFD04A099A09FA0A0A099C2A0A0A0C899A099C2A0A099C29F9F99C2
%A0A0A0C29FA0A0A09FA099A099A09F9FA0A099C2A0A0A0C29FA0A0C2A0C2
%A0A09F9F99C2A0A099A0A0A09FA0A09F9FC2A0A074FD04A0C29FC89FA09F
%A099A09FA099A09FA09FC8A0A099A09FA09FA0A0A0C9A0C8A0A09FC2A0A0
%9FC8A0A09FC8A09F99C8A0C89FA0A0C299C89FA0A0C8A0C9A0A09FA0A0C8
%A0A0A0C89FA0A0C8A0C2A0C2A0C89FC2A0A09FA0A0A099C2A0A0A0C8A0C2
%A0C2A0C2A0C8A0C89FC29FA0A0C9A0A09FC8A0A099C89FA0A0C89F999FC8
%A0C2A0C2A0C29FC2A0A09FC2A0A09FC2A0C2A0C9A0C29FC2A0C29F99C2A0
%A09FA09FA099A09F9FA0A099A09FA0759F9FA0A09F99A09F9F9FA099A09F
%A0A0A099A099A09FA09FA09FA099A09FA0A0A099A0A0A099A099A099C29F
%9F9FA099A09FA0A0A099A0A0A09FC29FA099A09FA0A0C299A09FA09F9F9F
%A09FA0A0A0759F9FA0A0A09FC89F9F9FA099A09FA0999F9FA0A0C2A0A0A0
%9F99FD05A0C9A0C8A0C29FC2A0C29FC9A0A09FC8A09F99C8A0C89FA0A0C2
%99C89FA0A0C8A0C9A0C29FA0A0C8A0C2A0C8A0A09FC8A0C8A0C2A0C89FC2
%A0A09FC2A0C299C2A0A09FC8A0C8A0C2A0C8A0C8A0C29FC29FC2A0C9A0A0
%9FC8A0C299C89FC2A0C89F9F99C2A0C8A0C2A0C29FC8A0A09FC8A0A09FC8
%A0C8A0C9A0C89FC2A0C89F99C8A0A0A0C29FA099C29FA0A0C29FA0A0C275
%9FA0C2A0A099C2A09F9FA099A0A0C2A0C299A099A0A0C29FA0A0C29FA0A0
%C2A0A099C2A0A099C299A099C89F9F9FC299A0A0C2A0A099C2A0A0A0C29F
%A099A09FA0A0C899A0A0C29F9FA0A09FA0A0A0759999C8A0A09FC89F9F9F
%A099A09FA099A09FC2A0C2A0C2A0A099FD05A0C9A0C2A0C29FA0A0C29FC8
%A0C29FC29F9F9FC8A0C89FA0A0C89FC299A0A0C2A0C9A0A09FA0A0C8A0C2
%A0C8A0C29FC2A0C8A0A0A0C89FA0A0A09FA0A0C299A0A0C29FC2A0C8A0A0
%A0C8A0C8A0C2A0A09FC2A0C9A0A09FC8A0C29FC899C2A0C89F9F999FA0C8
%A0C2A0C29FC29FA09FC29FA09FC2A0C8A0C8A0C8A0A09FC8A099FD05A09F
%A099A099A0A0A099A09FA0749FA0A09FA099A09FA0A09F99FD04A0C8999F
%99A0A0A099A0A0A099A0A0A09FA09FA0A0A099A099A09FA09F9F9FA099A0
%9FA09FA099A09FA0A0A099A09FA099A0A0A099A0A0A0999FA09F99A0A0A0
%749975A09FA09FA09FA09FA099A09FA099A0A0A09FC8A0A09FA099A09FA0
%A0A0C9A0C8A0C29FA0A0C2A0C8A0C29FC2A09F9FC8A0C89FA0A0C8A0C89F
%C2A0C8A0C9A0A09FC2A0C89FC2A0C8A0C2A0C8A0C8A0C2A0C89FA0A0C29F
%C2A0C29FC2A0C29FC2A0C8A0A0A0C8A0C8A0C2A0C29FC2A0C9A0C2A0C8A0
%C29FC89FC2A0C89F9F999FA0C8A0C2A0C29FC2A0C2A0C2A0C2A0C8A0C8A0
%C9A0C8A0A0A0C8A09FC2A0C2A0A09FA09FA09FA0A0A099A09FA0759FFD04
%A099FD04A09F99C2A0A0A0C899A099C2A0A099C2A0A099FD04A0C29FA0A0
%A09FA099A09FA09F9F9FA099A09FA0A0A099A0A0C2A0A099A09FA09FC2A0
%C299A0A0A09FA0A0A09FC2A0A0759999A0A0C29FC89FA09FA099A09FA099
%A0A0A09FC8FD04A099FD05A0C8A0C8A0A09FC2A0A09FC8A0A09FC2A09F99
%C8A0C299A0A0C29FC89FA0A0C8A0C9A0A09FA0A0C89FA0A0C8A0A09FC8A0
%C2A0C2A0C89FC2A0A09FC2A0A099C2A0A09FC2A0C29FC2A0C2A0C8A0A09F
%C29FA0A0C9A0A09FC8A0A09FC89FA0A0C89F99999FA0C89FC2A0A09FC2A0
%A09FC2A0A0A0C8A0C2A0C9A0C29FA0A0C29F99C8A0A09FA09FA099A09FA0
%A0A0999F99A0759F9FA0A09F99A0A09F9FA099A09FA0A0A099A099A09FA0
%99A09FA099A09FA0A0A099A0A09F99A0999F99C29F9F9FA0999F99A0A09F
%99A0A0A09FA099A099A09FA0A0C899A09FA09F9FA0A099A0A0A0759974A0
%A0A09FC89F9F9FA099A09FA09FA09FA0A0C2FD04A099A0A0A0C2A0C8A0C8
%A0C29FC2A0C29FC9A0A09FC2A09F99C8A0C89FC2A0C29FC89FA0A0C8A0C9
%A0C29FA0A0C89FC2A0C8A0A09FC8A0C8A0C2A0C89FC2A0A09FC2A0C299C2
%A0A09FC2A0C89FC2A0C8A0C8A0A09FC29FC2A0C9A0A09FC8A0C29FC99FA0
%A0C89F9F999FA0C8A0C8A0C29FC8A0A09FC8A0C2A0C8A0C8A0C9A0C89FC2
%A0C89F99C8A0A0A0C29FA099C29FA0A0C29F9F99A099999FC2A09F99C2A0
%9FA0A099A0A0C2A0C899A09FA09FA09FA0A0C29FA0A0C2A0A099C2A09F9F
%C29F9F99C89F9F9FC29F9F99C2A0A099C2A0A0A0C299A099A09FA0A0C899
%A0A0C29FA0A0A099A0A0A0759975A0A0A09FC89F9F9FA099A09FFD04A0C2
%A0C2A0C2A0A099FD05A0C8A0C2A0C29FA0A0C2A0C8A0C29FA09FA099C2A0
%C89FA0A0C89FC29FA0A0C2A0C9A0A09FA0A0C29FC2A0C8A0C29FC2A0C89F
%A0A0C89FC2A0C29FA0A0C299A0A0C29FA0A0C89FA0A0C8A0C8A0A09FA09F
%C2A0C8A0A0A0C8A0C29FC8A0A0A0C89F9F999FA0C89FC2A0C29FC29FA09F
%C29FC2A0C2A0C8A0C8A0C8A0A09FC8A099FD05A09FA099A099A0A0A099A0
%99A099999FA09F9F99A09FA0A0A099FD04A0C899A099A0A09F99A0A0A099
%A0A0A09FA099A09FA0A0A099A099A09F9F9FA099A099A09FA099A09FA0A0
%A099A09FA099A0A0A099A0A0A099A0A0A099A0A0A0749975A09FA09FA09F
%A09FA099A09FA099A0A0A09FC8A0A09FA099A09FA0A0A0C9A0C8A0C29FA0
%A0C29FC8A0C29FA09FC299A0A0C89FA0A0C89FC89FC2A0C8A0C9A0A09FC2
%A0C89FC2A0C8A0C2A0C8A0C89FA0A0C8A0C8A0C29FA0A0C89FC2A0C29FA0
%A0C8A0A0A0C8A0C8A0A09FC29FC2A0C8A0C2A0C8A0C29FC8A0C2A0C89F9F
%999FA0C89FC2A0C29FC2A0C2A0C29FC2A0C8A0C8A0C8A0C8A0A0A0C8A09F
%A0A0C2A0A09FA09FA09FA0A0A099A099A09F9999A0A0A09FA09FA0A0A099
%C2A0A0A0C899A099C2A0A099C2A0A099FD05A09FA09FA0A0A099A09FA09F
%9F9FA099A099A0A0A09FA0A0C2A0A099A09F9F99C2A0A099A0A0A09F9FA0
%A09FC2A0A0759999A0A0A09FC89FA09FA099A09FA099A0A0A09FC8FD04A0
%99A0A0A0C2A0C8A0C8A0A09FC2A0A09FC8A0A09FC29FC299A0A0C899C2A0
%C29FC8A0A0A0C8A0C8A0A09FA0A0C89FA0A0C8A0A09FC8A0C8A0C2A0C2A0
%C8A0A09FC2A0C299C2A0A09FA0A0C89FC2A0C2A0C8A09F9FC29FA0A0C9A0
%A09FC8A0A099C8A0A0A0C89F9975A0A0C89FC2A0A09FC2A0A09FC2A0A09F
%C8A0C2A0C8A0C89FA0A0C29F99A0A0A09FA09FA099A09F9F9FC2999F99A0
%A09975A0A09F99A0A0A09FA099A09FA0A0A099A099A09FA09FA09FA099A0
%9FA0A0A099A09FA09FA099A099A0A09F99A0999F99A0A0A099A0A0A09FA0
%99A09FA099A0A0A099A09FA09F9F9FA09FA0A0A0759999A0A0A09FC89F9F
%9FA099A09FA0999F9FA0A0C2FD04A099A0A0A0C2A0C9A0C8A0C29FC2A0C2
%9FC8A0A09FC29FC8999FA0C89FC2A0C89FC8A0A0A0C8A0C9A0C29FA0A0C8
%9FC2A0C8A0A09FC8A0C8A0C2A0C2A0C8A0A09FC2A0C899C2A0A09FC2A0C8
%9FC2A0C8A0C8A0A09FC89FA0A0C9A0A09FC8A0C299C8A0C2A0C99F9F99C2
%A0C89FC2A0C29FC8A0A09FC8A0A09FC2A0C8A0C9A0C89FC2A0C89F99C2A0
%A0A0C29FA099C29F9F9FC89F9F99A0A09F75C2A09F9FC2A0A09FA099A0A0
%C2A0C299A099A09FA09FA0A0C299A0A0C2A0A099C29FA0A0C299A09FC2A0
%9F9FC29F9F99A0A0A099C2A0A0A0C299A09FA09FA0A0C29F9FA0C29F9FA0
%C29FA0A0A075999FC2A09F9FC89F9F9FA099A09FA0999F99C2A0C2A0C2A0
%A099FD05A0C9A0C2A0C29FA0A0C29FC2A0C29FA09FC89F999FC89FA0A0C8
%9FC2A0A0A0C8A0C9A0A09FA0A0C29FC2A0C8A0A0A0C8A0C29FA0A0C2A0C8
%A0A09FA0A0C89FA0A0C29FA09FC89FA0A0C8A0C8A0A09FC29FA0A0C8A0C2
%9FC2A0C29FC8A0C2A0C8999F99C2A0C29FC2A0C29FC29FA09FC29FA09FA0
%A0C8A0C8A0C8A0A09FC8A09FA0A0C2A0A09FA099A09FA09FA099A099A0A0
%9F75A0A0A09FA09FA09FA099FD04A0C899A099A09F9F99A0A0A099A0A0A0
%99A09FA099A0A0A099A09FA09FA09FA099A099A09FA099A09FA0A0A075A0
%9F9F99C8A0A09F9FA0A099A0A0A099A0A09F749FA0A099A09FA09FA09FA0
%99A09FA099A099A09FC8A0A09FA099A09FA0A0A0C9A0C8A0C29FA0A0C29F
%C2A0C29FA09FC89F9FA0C89FC2A0C8A0C8A0C2A0C8A0C9A0A09FC2A0C29F
%C2A0C8A0C2A0C8A0C29FC2A0C2A0C8A0C29FC2A0C89FC2A0C29FA0A0C89F
%C2A0C8A0C8A0A09FC29FC2A0C8A0C89FC2A0C29FC8A0C2A0C89F9F9FC8A0
%C29FC2A0C29FC2A0C2A0C2A0C29FA09FC8A0C8A0C8A0A0A0C8A09FA0A0C8
%A0A09FA09FA09FA0A0A099A099A0A09F75A0A0A09FFD05A099FD04A0C899
%A099C2A09F9FC2A0A099A0A0A099A09FA099A0A0A099A09FA0A0A09FA099
%A099A09FA09FA0A0C2A0A099A09F9F99C8A0A09F9F9FA09FA0A0A099A0A0
%9F74A0A0A099A09FC29FA09FA099A09FA099A099A09FC8FD04A099A0A0A0
%C2A0C8A0C8A0A09FC2A0A09FC2A0A09FC2A0C8999FA0C89FC2A0C29FC8A0
%A099C8A0C8A0A09FA0A0C29FA0A0C8A0A09FC8A0A09FC2A0A09FC8A0A09F
%C2A0C89FC2A0A09FC2A0C29FC2A0C2A0C9A09F9FC29FA0A0C8A0C299C2A0
%A09FC8A0A09FC89F999FC89FA09FC2A0A09FC2A0A09FC2A0A09FC29FC2A0
%C8A0C89FA0A0C29F99A0A0A09FA09FA099A09F9F9FC8999F99A0A09974A0
%A0A09FA0A09F9FA09F9F9FA0A0A099A09FA09FA09FA09FA099A09FA0999F
%99A09FA09FA09F9F99A0A0A09FA0999F99A0A09F99FD05A0999F99A099C2
%A0A0A09F99C29FA09FA099A0A0A075A09FA0999F9FC89F9F9FA099A09FA0
%999F99A09FFD05A099A0A0A0C2A0C8A0C8A0C29FC2A0C29FC8A0A09FC2A0
%C2999FA0C89FC8A0C29FC8A0C299C8A0C9A0C2A0C2A0C89FC2A0C8A0A09F
%C89FA09FC2A0A09FC8A0C29FC2A0C89FC8A0A09FC8A0C89FC2A0C8A0C9A0
%A09FC29FA0A0C9A0C89FC2A0C29FC8A0A09FC99F9F9FC89FA09FC2A0C29F
%C8A0A09FC8A0A09FC29FC8A0C9A0C89FC2A0C89F99C2A0C29FC29FA099C2
%9F9F9FC89FA09FC89F9975A0A0A09FC2A09F9FC2A09F9FC2A0A099A09FA0
%9FA09FA0A0C299A0A0A0999F99C299A0A0C29F9F99C8A0A09FC299A0A0C2
%A0A099C2FD04A0999F99A09FC8A0C2A0A099C29FA0A0C299A0A0A075A0A0
%A0999F9FC89F9F9FA099A09FA099A099FD04A0C2A0A099FD05A0C9A0C2A0
%C29FA0A0C29FC2A0C2A0C8A0C2999F9FC8A0C2A0C89FC2A0C89FA0A0C9A0
%A09FC2A0C29FC2A0C8A0A0A0C29FC29FA0A0A09FC8A0C29FA0A0C8A0C2A0
%C2A0C8A0C89FA0A0C8A0C8A0A09FA09FC2A0C8A0C8A0A0A0C2A0C8A0A09F
%C89F9F9FC29FC29FA0A0C29FC29FA09FC29FA09FA09FC8A0C8A0C8A0A0A0
%C8A099A0A0C8A0A09FA099A09FA09FA099A0A0A0999975A0A0A09FA09F9F
%A0A09F9F9FA0A0A099A099A0A09F99A0A0A099A0A09F99A09FA099A0A0A0
%99A099A09FA09FA099A0A0A09FA099A0A0C2A0A099A0999F99C8A0A09FA0
%99A09FA0A0A099A0A0A074A0A09F99A09FA09FA09FA099A09FA099A0999F
%9FC2A0A09FA099A09FA0A0A0C9A0C8A0C29FA0A0C29FC2A0C2A0C8A0A099
%9FA0C8A0C2A0C89FC8A0C89FA0A0C9A0A09FC2A0C89FC2A0C8A0C2A0C89F
%C29FC2A0C29FC8A0C29FA0A0C8A0C8A0C2A0C8A0C89FC2A0C9A0C8A0A09F
%A09FC2A0C8A0C8A0A0A0C29FC8A0C2A0C8A09F9FC89FC29FC2A0C89FC2A0
%C2A0C2A0C29FA09FC8A0C9A0C8A0A0A0C8A099A0A0C8A0A09FA09FA09FA0
%A0C299A0A0A0759999FD05A09F9FFD04A09FC2A0C299A099C2A09F9FC2A0
%A099A0A0A099A09FA099A0A0A099A099FD05A099C2A0A09FA09FA0A0C2A0
%A099A0999F99C9A0A0A0C299A09FA0A0A099A0A0A0759FA0A099A09FA09F
%A09FA099A09FA099A099A09FC2FD04A099FD05A0C8A0C8A0A09FC2A0A09F
%C2A0A09FC8A09F999FA0C89FC2A0C299C8A0C89FC2A0C8A0A09FA0A0C89F
%A0A0C8A0A09FC89FA09FC2A0A099C8A0A09FA0A0C29FC8A0A09FC8A0C29F
%C2A0C8A0C8A0A09FA09FA0A0C8A0C8FD04A09FC8A0A09FC8A09F99C89FA0
%9FC2A0C29FC2A0A09FC2A0A09FC29FC2A0C9A0C89FA0A0C29F99A0A0C29F
%A09FA099A09F9F9FC89FA09FA0759975A0A0A099A09F9F9FA0A09F99C8A0
%A099A099A09FA09FA09FA099A09FA0999F99A0999F9FA0999F99C2A0A09F
%A099A09FA0A09F99A0A0A09FA099A099A099C2FD04A099A09F9FA0A099A0
%A0A099999FA0999F99A0A09F9FA099A09FA0999F99FD04A0C2A0A099A0A0
%A0C2A0C8A0C8A0C29FC2A0C29FC8A0C29FC8A09F999FA0C8A0C2A0C89FC8
%A0C89FC2A0C8A0C29FA0A0C89FC2A0C8A0A09FC8A0A09FC2A0A09FC8A0A0
%9FC2A0C29FC8A0A09FC8A0C89FC2A0C8A0C8A0A09FC29FA0A0C9A0C8A0A0
%A0C29FC8A0A09FC8A0A099C2A0A09FC2A0C89FC8A0A09FC8A0A09FC29FC8
%A0C9A0C89FC2A0C89F99C2A0C2A0C29FA099C29F9F9FC89FA0A0A0759975
%C2A0A099C2A0A09FC2A09F99C8A0A099A099A09FA09FA0A0C299A0A0A099
%9F99C29F9FA0C299A099C89FA0A0C299A0A0C2A0A09FC2A0A0A0C299A09F
%A09FC8A0C2A0A099A09F9FA0C299A0A0C89F9999A0999F9FC2A0A09FA099
%A09FA099A099FD04A0C8A0A099FD05A0C9A0C2A0C29FA0A0C29FC2A0C2A0
%C8999F999FA0C8A0A0A0C89FC2A0C89FA0A0C8A0A09FA0A0C29FC2A0C8A0
%A09FC89FA09FA0A0C29FC2A0A09FA0A0C29FC8A0C2A0C2A0C89FA0A0C9A0
%C2A0A09FA09FC2A0C8A0C8A09F9FC29FC8A0A09FC8A0C299A09FA09FA0A0
%C89FC29FA09FC29FA09FA09FC8A0C8A0C8A0A09FC8A099A0A0C8A0A09FA0
%99A09FA09FA099A0A09F749975A09FA099A09FA0A0A09FA09FC89FA099A0
%99A09F9F99A0A0A099A0A0A099A09FA0999FA0A099A099A099A0A0A099A0
%A0A09FA09FFD05A099A09F9F99C8A0A09FA099A09FA0A0A075A0A0A09F99
%99A099A09FA0A0A09FA099A09FA099A099A09FA0A0A09FA099A09FA0A0A0
%C9A0C8A0C29FA0A0C29FC2A0C2A0C8999F999FA0C8A0A0A0C89FC8A0C89F
%A0A0C8A0A09FC2A0C29FC2A0C8A0C2A0C8A0C29FC2A0C29FC8A0C29FA0A0
%C2A0C8A0C2A0C8A0C89FA0A0C9A0C8A0C2A0C29FC2A0C8A0C8A09F9FC29F
%C8A0A0A0C8A0C899A0A0C29FC2A0C99FC2A0C2A0C2A0C29FA09FC8A0C8A0
%C8A0A0A0C8A099A0A0C8A0A09FA09FA09FA0A0C29FC2A09F759999A0A0C2
%99FD07A09FC8A0C29FA099C2A09F99C2A0A099A0A0A099A09FA0999FA0A0
%99A09FA099A0A0A09FC2A0A09FA09FA0A0C2A0A099A09FA099C9FD04A099
%A09FA0A0A099A0A0A09F9F99A099A09FA0A0A09FA099A09FA099A099A0A0
%C2A0C2A0A099FD05A0C8A0C8A0A09FC2A0A09FC8A0C2A0C89F99999FA0C8
%A0A09FC299C8A0C899C2A0C8A0A09FA0A0C29FA0A0C8A0A09FC8A0A09FC2
%A0A099C8A0A09FA0A0A09FC8A0A0A0C8A0C29FC2A0C8A0C8A0A09FC29FA0
%A0C9A0C89FA0A0A09FC8A09F9FC8A0C299A0A0A09FC2A0C89FC2A0A09FC2
%A0A09FA0A0C8A0C9A0C29FC2A0C29F99A0A0A09FA09FA099A09F9F9FC89F
%A0A0A0759975A0A0A099A0A09F9FA0A09F99C8A0A099A099A09FA099A09F
%A099A09FA09F9F99A0999F9FA0999F99C299A09FA09FA09FA09F9F99A0A0
%A09FA099A099A099C8FD04A075A09FA0A0A099A09FA0A09975A09F9F99C2
%A09F9FA099A09FA0999F99FD04A0C2A0A099FD05A0C9A0C8A0C29FC2A0C2
%9FC8A0C2A0C8A09F999FA0C8A0C2A0C899C8A0C89FC2A0C8A0C2A0A0A0C8
%9FC2A0C8A0A0A0C8A0C29FC2A0A099C8A0A09FC2A0A0A0C8A0C2A0C8A0C8
%9FC2A0C8A0C8A0A09FC29FA0A0C9A0C8A0A0A0C29FC9A09F9FC8A0C899A0
%A0C29FC2A0C89FC8A0A09FC8A0A09FC2A0C8A0C9A0C89FC2A0C89F99C2A0
%C29FC29FA099C29F9F9FC89FA0A0C2999975C2A0A099A0A09F9FC2A09F9F
%C9A0A099A099A09FA09FA0A0A09FA0A0C2A09F99C29F9F9FC29F9F99C299
%A0A0C29FA0A0C2A0A09FC2FD04A099A099A09FC8A0C2A0A099A09F9FA0A0
%99A0A0C2A09999C29F9F9FC8A09F9FA099A09FA0999F99C2A0A0A0C8A0A0
%9FC2FD04A0C9A0C2A0C29FA0A0C29FC2A0C2A0C2A0A0999FA0C8A0A09FC8
%9FC2A0C89FA0A0C9A0A09FA0A0C29FC2A0C89FC2A0C2A0C89FA0A0C299C2
%A0A09FFD04A0C8A0C2A0C2A0C89FA0A0C8A0C89FC2A0A09FC2A0C9A0C8A0
%9F9FC29FC89FA0A0C8A0C8999FA0C89FA0A0C89FC29FA09FC29FA09FA0A0
%C8A0C9A0C8A0C2A0C8A099A0A0C8A0A09FA099A09FA09FA099A0A0A09999
%75A09FA099A09F9FA0A09F9F99C2A0A099A099A0A09F99A0A0A09FA0A0A0
%9FA099A0999F9FA099A099A099A0A0A099A0A0A09FA099A09FC8A0A099A0
%999F99C8A0A09FA099A09F9FA0A075A0A0A09F9999A09FA09FA09FA09FA0
%99A09FA099A09FA09FA0A0A09FA09FA09FA0A0A0C9A0C8A0C29FA0A0C29F
%C8A0C2A0C8A0C8999FA0C8A0A09FC89FC8A0C89FA0A0C9A0A09FC2A0C89F
%C2A0C8A0C2A0C8A0C8A0A0A0C299C2A0C29FA0A0C2A0C8A0C2A0C8A0C8A0
%A09FC8A0C99FC2A0A09FC2A0C9A0C8A0A09FC29FC8A0A0A0C8A0C299A0A0
%C89FC2A0C89FC2A0C2A0C2A0C29FC2A0C8A0C9A0C8A0C2A0C8A099A0A0C8
%A0A09FA09FA09FA0A0C29FC2A0A0A09F99A0A0C299A09FFD05A09FC2A0C2
%99A099C2A0A099A0A0A09FC2FD04A09FA0999FA0A099A099A099A0A0A09F
%C2FD04A099A09FC8A0A09FA09FA099C8A0A0A0C299A09FA0A0A099A0A0A0
%9F9999A0A0A09FA09FA09FA099A09FA099A09FA09FC2A0A09FA0A0A09FA0
%A0A0C9A0C8A0A09FC2A0A09FC8A0A0A0C8A0C2999FA0C8A0A0A0C299C8A0
%C89FC2A0C8A09F9FA0A0C8A0A09FC8A0A0A0C8A0C8A0C2A0A099C8A0A09F
%A0A0A09FC8A0A0A0C8A0C2A0C29FA0A0C99FA09FC29FA0A0C9A0C2FD04A0
%99C8A09F9FC8A0A075A0A0C89FC2A0C299C2A0A09FC2A0A09FC2A0C2A0C9
%A0C29FC8A0C29F99A0A0A09FA09FA099A09F9F9FC89FA09FA0A09975A0A0
%A099A0A09F9FA0A09F99C8A0A074A099A09FA0999F9FA09FA09FA0A0A099
%A09F9F9FA0999F99C299A09FA09FA09FA0A0A099A09FA0A0A09FA099A09F
%C2FD04A099A09F9FA0A099A09FC2999999C2A0A099C89F9F9FA099A09FA0
%999F9FFD04A0C2A0A09FFD05A0C9A0C8A0C29FC2A0C29FC8A0C2A0C8A0C8
%999FA0C8A0C2A0C899C8A0C89FC2A0C9A09FA0A0A0C8A0A09FC2A0C2A0C8
%A0C8A0C2A0C299C8A0A09FC2A0A09FC8A0C2A0C8A0C8A0C29FC2A0C9A0C2
%9FC29FC2A0C9A0C8A0A0A0C29FC9A09FA0C8A0A099C2A0C8A0C2A0C29FC8
%A0A09FC8A0A09FC8A0C8A0C9A0C89FC8A0C89F99C2A0A09FC29FA099C29F
%9F9FC89FA0A0C2A09975C2A0A099A0A09F9FC2A09F9FC8A0A075A099A0A0
%A0999F9FA09FA0A0C2A0A09FC29F9F9FC299A099C899A0A0C29FA0A0C2A0
%A099A09FA0A0A09FA099A09FC2A0C2A0A099C29F9FA0A099A0A0C299999F
%C2A0A09FC89F9F9FA099A09FA099A0A0C2A0A0A0C2A0A09FC2FD04A0C9A0
%C2A0C29FA0A0C29FC2A0C2A0C2A0C8999FA0C8A0A09FC89FC2A0C89FA0A0
%C9A09F9FA0A0C29FC29FC29FC2A0C2A0C8A0A0A0C299A0A0A09FA0A0A09F
%C8A0C2A0C2A0C89FA09FC2A0C89FC8A0A09FC2A0C9A0C8A0A0A0C29FC89F
%A0A0C8A0A099C2A0C8A0A0A0C29FC29FA09FC29FA0A0C8A0C8A0C9A0C89F
%C2A0C8A099A0A0C2A0A09FA099A09FA0A0A099A0A0A09F9F75A09FA099A0
%9F9FA0A09F9F9FA0A0A099A099A09FA099A0A0A099A0A0A09FA09FA0999F
%9FA099A099A099A0A0A099A0A0A099A09FA09FA0A0A09FA099A099C8A0A0
%9FA099A09F9FA0A075A0A0A0759FA0A09FA09FA09FA09FA099A09FA099A0
%A0A09FC2A0A09FA09FA09FA0A0A0C9A0C8A0C29FA0A0C29FC8A0C2A0C8A0
%C8999FA0C8A0A0A0C89FC8A0C29FC8A0C9A09F9FA0A0C29FC8A0C89FC2A0
%C8A0C8A0C2A0C29FC2A0A09FA0A0C29FC8A0C2A0C8A0C2A0C2A0C8A0C89F
%C8A0A09FC2A0C9A0C8A0A0A0C29FC89FA0A0C8A09F9FC8A0C8A0C2A0C29F
%C2A0C2A0C29FC2A0C8A0C8A0C9A0C89FC2A0C8A099A0A0C8A0A09FA09FA0
%9FA0A0A09FC2A0A09F9F99A0A0C299A09FA0A0A099FD04A0C299A099C29F
%A0A0C2A0A099C2A0A0A0C29FA09F9F9FA099A099A099A0A0A09FC2A0A09F
%FD04A0C2FD04A09FA09FC8FD04A09FA09FA0A0A099C2A0A075FD04A0C29F
%C29FA09FA099A09FA099C2A0A09FC8FD04A09FA09FA0A0A0C9A0C8A0A09F
%C2A0A09FC8A0A0A0C8A0C2999FA0C8A0A0A0C299C8A0A09FC8A0C9A0A09F
%A0A0C2A0C2A0C8A0A0A0C8A0C2A0C2A0A099C2A0A09FA0A0A09FC8A0A0A0
%C8A0A09FC8A0C2A0C8A0C89FC29FA0A0C9A0C299C8A0A099C89F9FA0C8A0
%9999C8A0C2A0C2A0C29FC2A0A09FC2A0A0A0C8A0C2A0C9A0C29FC2A0C29F
%99A0A0A09FA09FA099A09F9F9FC29FA09FA0A09975A0A0A099A0A09F9FA0
%99A09FA0A0A075A099A09FA0A0A09FA099A09FA0A0A09FA09F9F9FA0999F
%99C299A0A0A09FA09FA09FA09FA0A0A09FA0A0A099A09FA0A0A09F9F9FA0
%9F9FA0A099A0A0A0759FFD04A09FC89F9F9FA099A09FA099A09FFD07A099
%FD05A0C9A0C8A0C29FC2A0C29FC8A0C2A0C8A0C8999FA0C8A0A0A0C899C8
%A0A09FC8A0C9A0A09FA0A0C8A0C8A0C8A0A0A0C8A0C8A0C2A0C299C2A0A0
%9FC2A0A09FC8A0C2A0C8A0C2A0C8A0C8A0C8A0C89FC29FC2A0C9A0A09FC8
%A0C299C99FA0A0C8A09F9FC8A0C8A0C2A0C29FC8A0A09FC8A0C2A0C8A0C8
%A0C9A0C89FC2A0C89F99C2A0A09FC29FA099C29F9F9FC89FA0A0C2A09975
%C2A0A099C2A09FA0C299A0A0C2A0A099A099A09FFD05A099A0A0C2A0A09F
%C2A09F9FC299A099C89F9FA0C29FA0A0C2A0A0A0C2A0A0A0C2A0A099A09F
%A0A0C89F9FA0C29F9FA0A099A0A0A0759FA0C2A0A09FC89F9F9FA099A09F
%A09FA0A0C2A0A0A0C2A0A099C2FD04A0C9A0C2A0C29FA0A0C29FC2A0C2A0
%C2A0C8999FA0C8A0A0A0C89FC2A0A0A0C8A0C9A0A09FA0A0C29FC8A0C89F
%C2A0C2A0C8A0A0A0C89FA0A0A09FA0A0C29FC8A0C2A0C2A0C8A0C2A0C8A0
%C2A0C8A0A09FC2A0C8A0C299C2A0C29FC89FA0A0C89F9F9FC8A0C8A0A0A0
%C29FC29FA09FC29FC2A0C2A0C8A0C8A0C89FA0A0C8A099A0A0C2A0A09FA0
%99A09FA09FA099A0A0A09F9F75A09FA099A09F9FA0A099FD05A099A099A0
%A0A09FA0A0A099A0A0A09FA09FA09F9F9FA099A099A099A0A0A09FA0A0A0
%9FA09FA09FA0A0A09FA099A099C2A0A09F9F99A0999FA0A099A0A0A074A0
%A0A09FA09FA09FA09FA099A09FA09FA0A0A09FC2A0A09FA099A09FA0A0A0
%C9A0C8A0C29FA0A0C29FC8A0C2A0C8A0C8999FA0C8A0A0A0C89FC8A0A0A0
%C8A0C9A0A09FA0A0C89FC2A0C8A0C2A0C8A0C8A0C2A0C89FC2A0C29FA0A0
%C29FC8A0C2A0C8A0C8A0C2A0C8A0C8A0C8A0A09FC2A0C9A0C89FA0A0C29F
%C89FC2A0C89F9F9FC8A0C8A0C2A0C29FC2A0C2A0C29FC2A0C8A0C8A0C9A0
%C8A0A0A0C8A099A0A0C2A0A09FA09FA09FA0A0A09FC2A0A09F9F99A0A0C2
%99A09FA0A0A099C2A0A0A0C299A099C2A0A09FC2A0A099C2A0A0A0C29FA0
%9FA09FA099A099A099A0A0A09FC2FD04A09FA0A0C2FD04A09FA09FC8FD04
%A099A09FA0A0A099C2A0A074FD04A0C29FC29FA09FA099A09FA09FC2A0A0
%9FC8FD04A09FA09FA0A0A0C8A0C8A0A09FC2A0A09FC8A0A0A0C8A0C2999F
%A0C8A0A0A0C299C8A09FA0C8A0C9A0A09FA0A0C89FA0A0C8A0A0A0C8A0C2
%A0C2A0C299C2A0A09FA0A0A09FC8A0A0A0C8A0C89FC2A0C2A0C8A0C89FC2
%9FA0A0C9A0C89FA0A0A09FC89FA0A0C89F9999C8A0C2A0C2A0C29FC2A0A0
%9FC2A0C2A0C8A0C2A0C9A0C89FC2A0C29F99A0A0A09FA09FA099A09F9F9F
%C29FA09FA0A09975A0A0A099A09F9F9FA099A09FA0A0A099A099A09FA099
%A09FA099A09FA0A0A099A0A09F9FA0999F99C2999F9FA09FA09FA0A0A099
%A0A0A09FC2A0A099A09FFD05A099A09F9FA0A099A0A0A0759FFD04A09FC8
%9F9F9FA099A09FA09FA09FFD07A099FD05A0C9A0C8A0C29FC2A0C29FC8A0
%C2A0C8A0C8999FA0C8A0A0A0C899C8A0A0A0C8A0C9A0C29FA0A0C8A0A0A0
%C8A0A0A0C8A0C8A0C2A0C89FC2A0A09FC2A0A09FC8A0C2A0C8A0C89FC2A0
%C8A0C8A0C89FC29FC2A0C9A0C8A0C2A0C29FC99FA0A0C89F999FC8A0C8A0
%C2A0C29FC8A0A09FC8A0C2A0C8A0C8A0C9A0C89FC2A0C89F99C2A0A0A0C2
%9FA099C29F9F9FC89FA0A0C2A09975C2A0A099C2A09FA0A099A0A0C2A0A0
%99A099A0A0A09FA0A0C299A0A0C2A0A09FC2A09F9FC299A099C8999FA0C2
%9FA0A0C2A0A099C2A0A0A0C2A0A099A09FA0A0C2A0A099C29F9FA0A099A0
%A0A0759FA0C2A0A09FC89F9F9FA099A09FFD04A0C2A0A0A0C2A0A099C2A0
%A09F9FC8A0C29FC29FA09FC29FC2A0C2A0C29FC299999FC8A09F9FC299C2
%9F9FA0C29FC8A0A099A0A0C29FA0A0C29FA09FC29FC2A0A09FC299A09FA0
%9F9FA0A09FC29FC2A0C29FC89F9F9FC2A0C29FC89FA099C2A0C89FC89F9F
%9FC29FC899A0A0C299999FC29FC2A0A0A0C29FA09FA09FA09FC2A0C29FC2
%A0C89FC89FA09FC29FA0C9A0C9A1C9A0C9A0C9A0C2A0C9A0C9A1C9A0A0A0
%C9A1C9A0C9A0A1A1C9A0C9A1C9A0C9A0A7A0C9A1A1A0C9A1C9A0C9A1C9A0
%C9A0C9A0A0A0C9A0C9A0C9A0C9A7C9A0C9A1C9A1C9A0C9A0C9A1C9A1C9A0
%A1A0C9A1C9A1C9A0C9A0C9A7A1A0C9A7A199A7A7C9A0C9A0C9A0A0A0C9A0
%C9A0C9A0C9A1C9A0C9A1C9A0C9A0C9A0C9
%%EndData
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_screens_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Custom Halftone Screens ProcSet)
%%Version: 1.2 0
%%CreationDate: (03/24/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
systemdict begin
userdict /Adobe_screens_AI5 15 dict dup begin
put
/initialize
{
	Adobe_screens_AI5 begin
	/screenid
		deviceDPI 600 gt composite? not or
		{
		-1
		}
		{
			deviceDPI currentScreenFreq 
			dup dup 60 ge exch 150 le and deviceDPI 300 le and
		{
			pop 60
		} if
		div 1.41421 div 0.5 add cvi
		} ifelse
	def
	
	2 screenid eq
	{
		/customsize 16 def
		/customdata /customdata2 def
		setcustomscreen
	} if
	
	3 screenid eq
	{
		/customsize 24 def
		/customdata /customdata3 def
		setcustomscreen
	} if
	
	4 screenid eq
	{
		/customsize 16 def
		/customdata /customdata4 def
		setcustomscreen
	} if
	
	5 screenid eq
	{
		/customsize 20 def
		/customdata /customdata5 def
		setcustomscreen
	} if
	
	6 screenid eq
	{
		/customsize 24 def
		/customdata /customdata6 def
		setcustomscreen
	} if
	
	7 screenid eq
	{
		/customsize 28 def
		/customdata /customdata7 def
		setcustomscreen
	} if
	
	8 screenid eq
	{
		/customsize 16 def
		/customdata /customdata8 def
		setcustomscreen
	} if
} def
/terminate
{
	currentdict Adobe_screens_AI5 eq
	{
	 end
	} if
} def
/setcustomscreen
{
	deviceDPI customsize div 0
	{
		1 add 2 div customsize mul cvi exch
		1 add 2 div customsize mul cvi exch
		customsize mul add
		customdata load exch get 256 div
	} setscreen
} def
/customdata2 28 28 mul string def
currentfile customdata2 readhexstring
4180E8694988E2634382EA6B4B8AE061A01939C8A81737C2A21B3BCAAA1636C0
F8795998F6775796FA7B5B9AF57656952ED8B80727D6B60F2FDABA0626D5B50E
4E8DE6674786EE6F4F8EE5664685ED6EAD1434C6A61F3FCEAE1232C5A51E3ECD
F3745493FE7F5F9EF1725291FD7E5E9D24D3B30C2CDEBE0222D1B10A2ADDBD04
4483EB6C4C8BE1624281E96A4A89E364A31C3CCBAB1535C1A11A3AC9A91838C3
FB7C5C9BF4755594F97A5A99F778589730DBBB0525D4B40D2DD9B90828D7B710
508FE4654584EC6D4D8CE7684887EF70AF1131C4A41D3DCCAC1333C7A72040CF
F0715190FC7D5D9CF2735392FF80609F21D0B00929DCBC0323D2B20B2BDFBF01
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata3 28 28 mul string def
currentfile customdata3 readhexstring
011DC7F5E73D0421CBF3E43A021EC8F6E83E0522CCF2E43A2B648BC4A0762F68
8AC39E732C658CC5A177306989C29D72D5B6521A6192D9B55219608FD6B6531B
6193DAB451185F8FFCEE440C28D2FCED430B27D1FDEF450C29D3FBEC420A26D0
BEA77D366F83BCA77C356E87BFA87E377082BBA67B346D86145B99E0AE4A1259
98DFB14E155C9AE1AD4A115897DEB04D0623CDF4E63C0420CAF8EA400723CDF4
E53B031FC9F7E93F316988C19F752E678EC6A378326A88C09F742D668DC6A278
DBB350175E91D8B8551C6395DCB24F165D90D7B7541C6294FAEC420925CFFFF1
470E2BD5F9EB410824CEFEF0460D2AD4BAA57A336C85BEAA80397180B9A47933
6B84BDA97F387181105797DDAF4C145A9CE3AB480F5696DDAE4B13599BE2AC49
021EC8F6E83E0522CCF2E43A011DC7F5E73D0421CBF3E43A2C658CC5A1773069
89C29D722B648BC4A0762F688AC39E73D6B6531B6193DAB451185F8FD5B6521A
6192D9B55219608FFDEF450C29D3FBEC420A26D0FCEE440C28D2FCED430B27D1
BFA87E377082BBA67B346D86BEA77D366F83BCA77C356E87155C9AE1AD4A1158
97DEB04D145B99E0AE4A125998DFB14E0723CDF4E53B031FC9F7E93F0623CDF4
E63C0420CAF8EA40326A88C09F742D668DC6A278316988C19F752E678EC6A378
DCB24F165D90D7B7541C6294DBB350175E91D8B8551C6395F9EB410824CEFEF0
460D2AD4FAEC420925CFFFF1470E2BD5B9A479336B84BDA97F387181BAA57A33
6C85BEAA803971800F5696DDAE4B13599BE2AC49105797DDAF4C145A9CE3AB48
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata4 28 28 mul string def
currentfile customdata4 readhexstring
1139B8E0FAD2531B133BBAE2F8D05119417180A6AE9A7B4B437382A5AD987949
C08867272F6F92CAC28A66262E6E90C8E8DE5F070F37B6F2EADD5E060E36B5F0
FED6571F173FBEE6FDD5561E163EBDE5AB9E7F4F477786A1A99D7E4E467685A3
2C6C96CEC68E62222A6A95CDC58D64240C34B3F6EED95A020A32B1F5EDDB5C04
143CBBE3F9D1521A123AB9E1FBD3541C447483A4AC997A4A427281A7AF9B7C4C
C38B65252D6D91C9C1896828307093CBEBDC5D050D35B4F1E9DF60081038B7F3
FCD4551D153DBCE4FFD758201840BFE7A89C7D4D457584A2AA9F8050487887A0
296994CCC48C63232B6B97CFC78F61210931B0F4ECDA5B030B33B2F7EFD85901
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata5 28 28 mul string def
currentfile customdata5 readhexstring
010B34C3EBFCF7CE3F16020C35C4EDFBF6CD3E15102552A4D6EADDB5632B1126
54A5D5EADCB3622A3958768499C19E8C7C5E3A59778498C19D8B7B5DC8A99370
47334C7587AFC9AA936F46324B7485AEF1E5BC6B1E0A2351A3D8F2E4BC6A1E09
2351A2D7FFF9D14219050F38C6EFFEF9D04118040E37C6EFE8E0B7662D142856
A8D3E7DFB7652D132856A7D4BF9C8E7F603D5B7A8195BE9A8E7E603C5B798297
314A7389B2CCAD906D442F497289B1CBAC926E4508214FA1DBF4E2B9671B0720
4EA0DAF4E3BA691C030D36C5EDFBF6CD3F16010C34C3ECFDF8CF4017122654A6
D4E9DDB4622A112553A5D6EBDEB5642C3B59788397C09C8B7C5D3A58778599C2
9E8C7D5FCAAB926E46314B7486AFC8AA947048334D7587B0F2E4BB691D082250
A1D8F1E6BD6B1F0A2452A3D9FDF8CF4118030E36C5EEFFFAD1421A050F38C7F0
E6DFB6642C132755A7D3E8E1B8662E152957A8D2BE9A8D7E5F3B5A798296BF9B
8F80613D5C7B80952F487188B1CAAC916D443049728AB3CCAE906C43061F4D9F
DAF3E2BA681C07214FA0DBF5E1B8671A00000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata6 28 28 mul string def
currentfile customdata6 readhexstring
081A44B6E0F2FDECC150250C091B45B6E1F3FCEBC04F240C1D336199C7D8DCD3
A56C37221E33619AC8D7DBD2A46B36214864798091AEB1958C7E694C49657A81
90ADB0948B7D684BB99D8475593C405C7888A1BEBA9E8574583B3F5B7888A0BD
E4CBAA712E1215326098CFE8E4CCA9712D1114315F97CEE7F5F1C6552B040719
43B5DFFAF6F0C6542A03061842B4DEF9FFEDC352270E0B1C47B8E3F4FEECC251
260D0A1C46B7E2F4DAD5A76E39232035639CCAD5D9D4A66D38231F34629BC9D6
AF938E806A4E4A677C838FABAE928D7F694D4A667B828FAC3E5A778AA3BFBC9F
8772563A3D597689A2BEBB9F8673573A14305E97D1EAE6CDA76F2B0F132F5D96
D0E9E5CDA8702C10051742B3DDFCF8EEC4522801041641B2DDFBF7EFC5532902
091B45B6E1F3FCEBC04F240C081A44B6E0F2FDECC150250C1E33619AC8D7DBD2
A46B36211D336199C7D8DCD3A56C372249657A8190ADB0948B7D684B48647980
91AEB1958C7E694CBA9E8574583B3F5B7888A0BDB99D8475593C405C7888A1BE
E4CCA9712D1114315F97CEE7E4CBAA712E1215326098CFE8F6F0C6542A030618
42B4DEF9F5F1C6552B04071943B5DFFAFEECC251260D0A1C46B7E2F4FFEDC352
270E0B1C47B8E3F4D9D4A66D38231F34629BC9D6DAD5A76E39232035639CCAD5
AE928D7F694D4A667B828FACAF938E806A4E4A677C838FAB3D597689A2BEBB9F
8673573A3E5A778AA3BFBC9F8772563A132F5D96D0E9E5CDA8702C1014305E97
D1EAE6CDA76F2B0F041641B2DDFBF7EFC5532902051742B3DDFCF8EEC4522801
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata7 28 28 mul string def
currentfile customdata7 readhexstring
01061B44B7E1F5FEFBE6BD4A210C01071B45B8E1F6FDFBE6BC4A200B09132A54
A7D1EAF5EED9B05D331609142B55A8D2EAF4EED9AF5C32161D2D3D6993C1CBE0
CEC59B7140301E2E3D6A93C0CADFCDC49A713F3047576C7B828DA2B6A48F867E
6F5A48576C7C828CA1B6A38F867E6E59BAAA958A78634E4451667A8498ADBAAB
968977624E4350657A8398ADE3D4C99F7539251A273C6892C2D7E4D4C89E7539
241A273B6891C1D6F8F2DDB460371005122A53A7D0ECF9F2DDB360360F051229
53A6D0EBFFFDE8BE4C220D03081D46B9E3F7FFFCE7BD4B210D02071C46B8E2F7
F3F0DBB15E34180B152C56A9D3E8F3EFDAB05D34170A142C55A9D2E9DFCCC69C
7341321F2F3F6B94BFC9DECCC59C7241311F2E3E6A94BFCAB5A38E8780705B49
596D7D808BA0B4A28D877F6F5B48586D7C818BA043506479859AAFBCAC978876
614C424F64798499AEBBAB968977624D19263B6791C3D8E5D6C79D7337231825
3A6690C3D7E5D5C79E74382304112952A5CFEDFAF0DBB25E350E03102851A5CE
ECF9F1DCB25F360E01071B45B8E1F6FDFBE6BC4A200B01061B44B7E1F5FEFBE6
BD4A210C09142B55A8D2EAF4EED9AF5C321609132A54A7D1EAF5EED9B05D3316
1E2E3D6A93C0CADFCDC49A713F301D2D3D6993C1CBE0CEC59B71403048576C7C
828CA1B6A38F867E6E5947576C7B828DA2B6A48F867E6F5ABAAB968977624E43
50657A8398ADBAAA958A78634E4451667A8498ADE4D4C89E7539241A273B6891
C1D6E3D4C99F7539251A273C6892C2D7F9F2DDB360360F05122953A6D0EBF8F2
DDB460371005122A53A7D0ECFFFCE7BD4B210D02071C46B8E2F7FFFDE8BE4C22
0D03081D46B9E3F7F3EFDAB05D34170A142C55A9D2E9F3F0DBB15E34180B152C
56A9D3E8DECCC59C7241311F2E3E6A94BFCADFCCC69C7341321F2F3F6B94BFC9
B4A28D877F6F5B48586D7C818BA0B5A38E8780705B49596D7D808BA0424F6479
8499AEBBAB968977624D43506479859AAFBCAC978876614C18253A6690C3D7E5
D5C79E74382319263B6791C3D8E5D6C79D73372303102851A5CEECF9F1DCB25F
360E04112952A5CFEDFAF0DBB25E350E
pop pop
/customdata8 28 28 mul string def
currentfile customdata8 readhexstring
050F2747B6D6EEF8FEF4DCBC4D2D1507111D375F9EC6E0E9EBE6CCA4653D1F13
2939556F8EA8C1D1D3C3AE9475573B2B4961717D808999B1B39B8B867F73634B
B8A090827A6A5A42445C6C7C8492A2BAD8C8AA97785232222434546E8DACCADA
F0E2CFA768401A0A0C1C365E9DC5E4F2FAF7DFBF50301802040E2646B5D5EDFC
FFF5DDBD4E2E160806102848B7D7EFF9EAE7CDA5663E2014121E38609FC7E1E8
D2C2AF9576583C2C2A3A56708FA9C0D0B29A8A878074644C4A62727E818898B0
435B6B7B8593A3BBB9A19183796959412333536D8CADCBDBD9C9AB9677513121
0B1B355D9CC4E5F3F1E3CEA6673F1909030D2545B4D4ECFDFBF6DEBE4F2F1701
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade false put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_screens_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Tracing Object) (Tracing) (TracingSuite.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (flare.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)
%AI8_PluginGroupInfo
(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)
%AI8_PluginGroupInfo
(Adobe Perspective Plugin Group) (Adobe Perspective Plugin Group) (Perspective.aip)
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe Blends Plugin) (Live Blends.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (Adobe Symbolism) (Symbolism.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (Calligraphic Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (Adobe Compound Shape) (PathFinder Suite.aip)
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI3_BeginPattern: (New Pattern Swatch 2)
(New Pattern Swatch 2) 0.20459 0 503.3286 360 [
%AI3_Tile
(0 O 0 R 0.133333 0.372549 0.701961 0 k
 0.133333 0.372549 0.701961 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d1 XR
503.3286 0 m
0.20459 0 L
0.20459 360 L
503.3286 360 L
503.3286 0 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.203922 0.607843 0.945098 0.058824 k
 0.203922 0.607843 0.945098 0.058824 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d1 XR
325.4448 287.7095 m
323.3374 303.5791 324.6987 320.1987 324.6987 339.5649 C
322.353 333.8794 324.5864 316.1538 323.0122 315.8701 c
321.2261 315.5479 321.6558 332.5938 322.2007 338.3984 c
322.8442 345.2783 322.6606 356.2227 322.6587 356.2227 C
322.6587 360 L
320.689 360 L
320.689 355.6406 L
320.6909 127.3945 320.7368 4.31055 V
320.689 0 L
322.6587 0 L
322.6587 4.31055 L
323.7739 177.1104 322.6782 250.4048 v
322.4927 262.772 322.8501 273.063 323.4995 284.1689 c
323.5171 284.4741 323.4976 271.2417 324.1489 271.6147 C
324.1489 271.9497 326.2583 281.5923 325.4448 287.7095 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.184314 0.533333 0.87451 0.027451 k
 0.184314 0.533333 0.87451 0.027451 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d0 XR
349.4722 62.5225 m
352.397 91.5278 351.9009 128.7012 349.4722 160.8496 c
348.2681 176.7935 344.3101 192.1895 343.4097 207.8271 c
342.2104 228.7075 344.2505 249.4727 343.4097 269.0083 c
342.2778 295.3438 349.4331 308.3232 349.4331 334.6929 c
349.4331 344.708 349.4331 360 Y
345.2651 360 L
345.2231 346.0737 345.2231 336.2422 v
345.2231 311.9976 338.3149 291.9482 339.3687 266.8237 c
340.1577 248.0522 338.2593 227.437 339.3687 206.7349 c
340.2427 190.4497 344.3853 174.439 345.4312 157.5713 c
346.3638 142.5381 345.4312 125.396 345.4312 109.501 c
345.4312 92.5479 347.3706 75.0625 345.4312 61.4297 c
344.5522 55.2529 341.0405 49.626 340.3794 43.9487 c
339.645 37.6333 345.2651 26.2886 345.2651 19.896 c
345.2651 13.04 345.2651 0 Y
349.4331 0 L
349.4048 25.6729 L
349.5728 34.8564 343.1851 36.0229 344.4204 45.043 c
345.3062 51.502 348.9116 56.9531 349.4722 62.5225 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.203922 0.607843 0.945098 0.058824 k
 0.203922 0.607843 0.945098 0.058824 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d1 XR
359.7905 87.9058 m
359.2202 91.7324 360.314 95.8159 359.7905 99.6597 c
358.9341 105.938 358.9341 121.2959 359.7905 127.5737 c
359.9858 129.0142 359.8638 130.5146 359.7905 131.981 c
358.9458 148.7764 358.1069 175.5571 359.7905 192.2183 C
359.7905 200.5425 360.9038 209.0269 359.7905 217.1938 c
358.9341 223.4717 359.4272 238.7285 359.7905 245.1074 c
360.2915 253.9409 359.7905 320.0366 359.7905 355.2983 C
359.7886 355.2983 359.7866 360 Y
357.7661 360 L
357.77 354.647 L
357.77 331.3564 357.77 308.0654 357.77 284.7764 c
357.77 281.8379 357.77 278.8999 357.77 275.9609 c
357.77 255.8833 357.77 235.8022 357.77 215.7236 c
357.77 210.3389 357.77 204.9492 357.77 199.5635 c
357.77 178.0171 357.77 156.4663 357.77 134.9199 c
357.77 124.6343 357.77 114.3511 357.77 104.0654 c
357.77 97.6987 357.77 91.334 357.77 84.9678 c
357.77 81.0503 357.77 77.1309 357.77 73.2139 c
357.77 57.0518 357.77 40.8916 357.77 24.7305 c
357.77 22.2822 357.77 19.832 357.77 17.3853 c
357.77 13.3555 357.77 9.32666 357.77 5.30029 C
357.7661 5.30029 L
357.7661 0 L
359.7866 0 L
359.7866 1.5708 L
359.7905 1.5708 L
359.7905 5.86035 359.7905 10.1523 359.7905 14.4468 c
359.7905 35.0137 360.5464 55.6113 359.7905 76.1523 c
359.5503 82.6826 360.5015 83.1309 359.7905 87.9058 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.184314 0.533333 0.87451 0.027451 k
 0.184314 0.533333 0.87451 0.027451 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d1 XR
371.9106 229.8179 m
368.396 267.1694 373.1831 305.3101 372.187 341.8457 c
372.063 346.3716 372.187 360 Y
368.019 360 L
368.0435 344.6353 368.1401 339.5298 v
368.7944 304.4663 365.5073 269.4473 367.8696 236.769 c
368.8228 223.5781 373.6587 212.04 372.9214 199.4019 c
369.9233 148.1484 368.4849 94.3843 368.0474 39.8315 c
368.0112 35.5127 368.0151 23.8877 368.0171 20.4082 C
367.9976 0 L
372.1655 0 L
372.1655 19.4097 L
372.6274 33.0313 372.8931 38.313 v
374.439 68.8823 377.4751 170.6567 371.9106 229.8179 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.203922 0.607843 0.945098 0.058824 k
 0.203922 0.607843 0.945098 0.058824 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d1 XR
237.5391 272.041 m
236.9688 268.2139 238.063 264.1304 237.5391 260.2871 c
236.6826 254.0073 236.6826 238.6494 237.5391 232.3691 c
237.7354 230.9287 237.6128 229.4287 237.5391 227.9614 c
236.6953 211.1655 235.856 184.3818 237.5391 167.7202 C
237.5391 159.395 238.6528 150.9097 237.5391 142.7402 c
236.6826 136.4639 237.1768 121.2036 237.5391 114.8252 c
238.04 105.9912 237.5391 39.8887 237.5391 4.62354 C
237.5381 4.62354 237.5352 0 Y
235.5142 0 L
235.5181 5.27441 L
235.5181 28.5684 235.5181 51.8618 235.5181 75.1533 c
235.5181 78.0913 235.5181 81.0288 235.5181 83.9673 c
235.5181 104.0483 235.5181 124.1304 235.5181 144.2124 c
235.5181 149.5977 235.5181 154.9883 235.5181 160.3726 c
235.5181 181.9233 235.5181 203.4756 235.5181 225.0225 c
235.5181 235.3091 235.5181 245.5938 235.5181 255.8804 c
235.5181 262.248 235.5181 268.6123 235.5181 274.98 c
235.5181 278.8975 235.5181 282.8169 235.5181 286.7344 c
235.5181 302.8989 235.5181 319.0601 235.5181 335.2227 c
235.5181 337.6709 235.5181 340.1221 235.5181 342.5688 c
235.5181 346.5981 235.5181 350.6279 235.5181 354.6538 C
235.5142 354.6538 L
235.5142 360 L
237.5352 360 L
237.5352 358.3848 L
237.5391 358.3848 L
237.5391 354.0957 237.5391 349.8018 237.5391 345.5078 c
237.5391 324.9385 238.2959 304.3389 237.5391 283.7954 c
237.2983 277.2651 238.2505 276.8169 237.5391 272.041 c
f
316.3462 272.0322 m
315.7759 268.2056 316.8687 264.1226 316.3462 260.2793 c
315.4897 254.0005 315.4897 238.644 316.3462 232.3643 c
316.5415 230.9238 316.4194 229.4238 316.3462 227.957 c
315.5015 211.1626 314.6626 184.3813 316.3462 167.7212 C
316.3462 159.397 317.4585 150.9126 316.3462 142.7437 c
315.4897 136.4678 315.9829 121.209 316.3462 114.8315 c
316.8472 105.998 316.3462 39.9019 316.3462 4.64014 C
316.3442 4.64014 316.3423 0 Y
314.3218 0 L
314.3257 5.29102 L
314.3257 28.5825 314.3257 51.874 314.3257 75.1631 c
314.3257 78.1011 314.3257 81.0381 314.3257 83.9766 c
314.3257 104.0557 314.3257 124.1357 314.3257 144.2158 c
314.3257 149.6006 314.3257 154.9907 314.3257 160.3745 c
314.3257 181.9233 314.3257 203.4731 314.3257 225.0181 c
314.3257 235.3037 314.3257 245.5874 314.3257 255.873 c
314.3257 262.2402 314.3257 268.604 314.3257 274.9712 c
314.3257 278.8882 314.3257 282.8071 314.3257 286.7241 c
314.3257 302.8872 314.3257 319.0469 314.3257 335.208 c
314.3257 337.6558 314.3257 340.1069 314.3257 342.5532 c
314.3257 346.5825 314.3257 350.6118 314.3257 354.6372 C
314.3218 354.6372 L
314.3218 360 L
316.3423 360 L
316.3423 358.3677 L
316.3462 358.3677 L
316.3462 354.0791 316.3462 349.7856 316.3462 345.4922 c
316.3462 324.9248 317.1021 304.3271 316.3462 283.7856 c
316.105 277.2559 317.0562 276.8076 316.3462 272.0322 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.184314 0.533333 0.87451 0.027451 k
 0.184314 0.533333 0.87451 0.027451 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d1 XR
249.6597 130.1143 m
246.144 92.7612 250.9321 54.6162 249.936 18.0771 c
249.812 13.5518 249.936 0 Y
245.7671 0 L
245.7925 15.2871 245.8882 20.394 v
246.5435 55.4609 243.2573 90.4824 245.6177 123.1646 c
246.5718 136.3574 251.4077 147.896 250.6694 160.5347 c
247.6724 211.7949 246.2339 265.5625 245.7954 320.1211 c
245.7593 324.4404 245.7651 336.0649 245.7671 339.5449 C
245.7456 360 L
249.9146 360 L
249.9146 340.5439 L
250.3755 326.9214 250.6421 321.6382 v
252.187 291.0664 255.2241 189.2842 249.6597 130.1143 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.094972 0.322728 0.598901 0 k
 0.094972 0.322728 0.598901 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d0 XR
301.5542 177.3052 m
300.1626 168.1875 295.2808 162.4985 293.4712 152.6221 c
287.5796 120.4888 300.3843 100.5166 303.3638 78.3354 c
305.2046 64.6392 303.0796 17.6338 303.7007 7.88525 C
308.5415 50.6787 289.0073 112.9575 294.439 152.3857 c
295.7437 161.8525 302.5581 168.5391 303.5747 177.3052 c
311.0864 242.1597 306.7896 261.9541 304.0376 302.3706 c
302.4194 326.1328 303.8687 342.9951 Y
298.0767 297.106 309.6733 230.5474 301.5542 177.3052 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.164706 0.482353 0.815686 0.015686 k
 0.164706 0.482353 0.815686 0.015686 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d1 XR
448.6851 224.1084 m
447.7339 225.8125 447.7339 232.2217 448.6851 233.9287 c
467.9448 268.4585 448.6851 312.4849 448.6851 351.7627 C
448.6821 351.7627 448.6782 351.7627 448.6753 351.7627 C
448.6753 360 L
446.6909 360 L
446.6909 351.7627 L
446.6821 351.7627 446.6821 8.07813 446.6909 8.07813 C
446.6909 0 L
448.6753 0 L
448.6821 8.07813 448.6851 8.07813 V
448.6851 80.0869 483.9946 160.8008 448.6851 224.1084 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.094972 0.322728 0.598901 0 k
 0.094972 0.322728 0.598901 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d1 XR
477.312 144.5591 m
476.7729 149.8765 473.4731 158.4336 473.27 163.5093 c
471.1489 216.6064 476.9312 277.4316 474.2808 336.0576 C
474.2593 336.0576 L
474.2593 360 L
471.228 360 L
471.23 341.6577 471.228 335.5342 v
471.2251 326.7124 466.0894 204.7637 471.2495 163.5093 c
471.9976 157.5259 473.2925 150.8481 474.2808 144.5591 c
475.6782 135.6753 476.2222 130.0322 474.2808 120.6216 c
473.6655 117.6436 473.2388 113.7402 473.27 109.6519 c
473.3901 93.6274 471.5952 64.1631 471.228 48.9961 c
471.0757 42.7339 471.228 23.937 Y
471.228 0.000488 L
474.2593 0.000488 L
474.2593 23.937 L
474.3638 47.7778 474.3638 47.8115 v
474.5337 58.0342 476.3013 71.0171 476.3013 76.7358 c
476.3013 99.3257 479.4077 123.8604 477.312 144.5591 c
f
335.8638 215.4365 m
335.3257 210.1172 332.0249 201.5605 331.8228 196.4863 c
329.7017 143.3877 335.4829 82.5635 332.8335 23.938 C
332.811 23.938 L
332.811 0.000488 L
329.7808 0.000488 L
329.7827 18.3384 329.7808 24.46 v
329.7778 33.2837 324.6421 155.23 329.8022 196.4863 c
330.5503 202.4688 331.8442 209.147 332.8335 215.4365 c
334.23 224.3193 334.7749 229.9614 332.8335 239.373 c
332.2173 242.3516 331.7915 246.2549 331.8228 250.3442 c
331.9419 266.3682 330.147 295.8306 329.7808 310.998 c
329.6284 317.2612 329.7808 336.0576 Y
329.7808 360 L
332.811 360 L
332.811 336.0576 L
332.9155 312.2173 332.9155 312.1841 v
333.0854 301.9604 334.854 288.9785 334.854 283.2593 c
334.854 260.6699 337.9595 236.1343 335.8638 215.4365 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.203922 0.607843 0.945098 0.058824 k
 0.203922 0.607843 0.945098 0.058824 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d1 XR
470.5366 311.4512 m
471.1167 323.1426 472.2212 343.3169 471.2222 354.9482 C
471.3081 343.4966 470.5874 323.2612 470.5366 311.4512 C
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.164706 0.482353 0.815686 0.015686 k
 0.164706 0.482353 0.815686 0.015686 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d1 XR
418.9097 360 m
420.9302 360 422.9507 360 424.9712 360 C
424.9712 240.0098 424.9712 119.9888 424.9712 0 C
422.9507 0 420.9302 0 418.9097 0 C
418.9097 119.9888 418.9097 240.0098 418.9097 360 C
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.184314 0.533333 0.87451 0.027451 k
 0.184314 0.533333 0.87451 0.027451 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d1 XR
441.4448 360 m
441.4448 318.1748 441.4448 23.998 441.4448 0.000488 C
441.7817 0.000488 442.1177 0.000488 442.4546 0.000488 C
442.4546 23.998 442.4546 318.1748 442.4546 360 C
442.1177 360 441.7817 360 441.4448 360 C
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.164706 0.482353 0.815686 0.015686 k
 0.164706 0.482353 0.815686 0.015686 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d1 XR
431.5093 360 m
431.5093 240.0098 431.5093 119.9888 431.5093 0.000488 C
433.8657 0.000488 436.2241 0.000488 438.5815 0.000488 C
438.5815 119.9897 438.5815 240.0107 438.5815 360 C
431.5093 360 L
f
411.2866 360 m
409.0767 360 L
409.2007 276.4067 408.271 263.4653 v
408.1235 261.4141 407.77 259.2871 408.271 257.2944 c
409.1372 253.8467 409.7173 244.0791 408.271 240.8389 c
405.7456 235.1821 410.2915 234.9253 407.2612 230.5542 c
403.3774 224.9541 404.0679 216.0215 407.2612 209.9854 c
409.0288 206.6431 409.5337 203.0435 407.2612 199.6997 c
383.2729 164.4316 407.1089 103.1265 409.0688 71.0127 c
410.1597 53.1206 409.0767 13.5732 Y
409.0767 0 L
411.2866 0 L
411.2866 10.1885 411.2866 13.5732 v
411.2886 27.708 411.3022 70.1138 Y
411.3022 70.4136 411.2866 360 Y
f
259.2407 0 m
261.4507 0 L
261.3257 83.5903 262.2573 96.5322 v
262.4038 98.583 262.7563 100.7104 262.2573 102.7026 c
261.3911 106.1509 260.811 115.9175 262.2573 119.1587 c
264.7827 124.8145 260.2368 125.0723 263.2681 129.4434 c
267.1509 135.0435 266.4604 143.9756 263.2681 150.0122 c
261.4995 153.3555 260.9946 156.9546 263.2681 160.2974 c
287.2544 195.5659 263.4185 256.8721 261.4604 288.9844 c
260.3677 306.8774 261.4507 346.4238 Y
261.4507 360 L
259.2407 360 L
259.2417 349.8096 259.2407 346.4238 v
259.2388 332.2891 259.2261 289.8838 Y
259.2261 289.585 259.2407 0 Y
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.203922 0.607843 0.945098 0.058824 k
 0.203922 0.607843 0.945098 0.058824 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d1 XR
409.5142 343.1172 m
409.2759 345.8608 408.7378 353.0161 409.0737 356.0908 c
406.854 335.748 408.7935 300.0674 408.8003 280.314 C
409.022 283.6479 409.1011 296.3457 409.2759 299.687 c
410.228 317.8501 410.939 326.7173 409.5142 343.1172 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.156863 0.423529 0.756863 0.003922 k
 0.156863 0.423529 0.756863 0.003922 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d0 XR
425.4468 360 m
425.4468 0 L
427.4673 0 L
427.4673 360 L
425.4468 360 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.109804 0.337255 0.658824 0 k
 0.109804 0.337255 0.658824 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d1 XR
419.7222 145.5537 m
419.1841 150.8721 415.8833 159.4292 415.6812 164.5049 c
413.5601 217.6021 419.3413 278.4277 416.6909 337.0532 C
416.6694 337.0532 L
416.6694 360 L
413.6382 360 L
413.6704 342.0859 413.6382 336.5293 v
413.5894 327.7085 408.5005 205.7578 413.6606 164.5049 c
414.4077 158.5229 415.7026 151.8442 416.6909 145.5537 c
418.0884 136.6699 418.6333 131.0283 416.6909 121.6182 c
416.0757 118.6396 415.6499 114.7368 415.6812 110.647 c
415.8003 94.6226 414.0054 65.1592 413.6382 49.9917 c
413.4868 43.7295 413.6382 24.9321 Y
413.6382 0 L
416.6694 0 L
416.6694 24.9321 L
416.7739 48.7729 416.7739 48.8066 v
416.9438 59.0303 418.7124 72.0127 418.7124 77.7305 c
418.7124 100.3228 421.8179 124.8564 419.7222 145.5537 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.164706 0.482353 0.815686 0.015686 k
 0.164706 0.482353 0.815686 0.015686 K
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d1 XR
493.1401 184.0156 m
493.5337 179 493.562 173.9419 493.1401 168.9277 c
492.5542 161.9741 490.7983 137.832 493.1401 131.2095 C
493.1401 126.4917 492.3511 117.479 491.1187 113.29 c
483.6899 88.0161 490.6421 51.3135 491.1323 19.0625 C
491.1284 19.0625 491.1226 19.0625 491.1187 19.0625 C
491.1187 10.1157 L
491.1187 9.41455 L
491.1187 0 L
485.5454 0 L
485.5454 9.41455 L
485.5454 10.1157 L
485.5454 19.021 L
483.3208 80.2329 488.0005 168.0693 485.0571 240.5981 c
484.73 248.6689 486.4517 256.8779 485.0571 264.1724 c
483.3159 273.2808 475.936 280.3408 478.9946 289.6367 c
481.1392 296.1509 490.4946 299.5566 492.1294 307.5537 c
495.2007 322.5698 485.5786 317.3774 485.5562 349.8462 C
485.5454 349.8462 L
485.5454 360 L
491.1187 360 L
491.1187 349.9888 L
491.1187 337.3359 491.1187 331.1289 v
491.1187 318.48 496.4956 312.3618 496.1704 301.8955 c
495.9556 294.9561 489.5767 287.9985 489.0981 280.2051 c
488.8267 275.8003 491.6011 271.6719 492.1294 267.002 c
495.0962 240.8037 491.1177 209.7739 493.1401 184.0156 c
f
488.0884 290.5771 m
490.5562 293.7036 492.5806 304.8804 495.1606 301.8955 C
495.2349 304.7095 493.4917 310.7261 493.1401 308.4951 c
491.7544 299.7324 484.5366 294.4121 488.0884 290.5771 C
f
488.0884 250.0273 m
488.7427 234.2881 486.7671 211.0786 489.0981 200.0493 C
488.4438 215.7861 490.4194 238.9985 488.0884 250.0273 C
f
488.0884 261.3457 m
487.4604 259.1279 488.3091 250.0728 489.0981 252.8574 c
489.7261 255.0728 488.8774 264.1294 488.0884 261.3457 c
f
*U
*u
279.2378 175.9468 m
278.8452 180.9634 278.8159 186.0215 279.2378 191.0352 c
279.8237 197.9883 281.5796 222.1313 279.2378 228.7544 C
279.2378 233.4712 280.0269 242.4839 281.2583 246.6729 c
288.688 271.9468 281.7358 308.6494 281.2466 340.9004 C
281.2505 340.9004 281.2544 340.9004 281.2583 340.9004 C
281.2583 349.8472 L
281.2583 350.5488 L
281.2583 360 L
286.8335 360 L
286.8335 350.5488 L
286.8335 349.8472 L
286.8335 340.9424 L
289.0571 279.73 284.3784 191.894 287.3208 119.3657 c
287.6479 111.2944 285.9272 103.0854 287.3208 95.7905 c
289.063 86.6816 296.4409 79.6226 293.3823 70.3267 c
291.2397 63.8125 281.8843 60.4067 280.2476 52.4092 c
277.1772 37.3936 286.7993 42.585 286.8208 10.1162 C
286.8335 10.1162 L
286.8335 0 L
281.2583 0 L
281.2583 9.97461 L
281.2583 10.0229 281.2583 10.1162 v
281.2583 11.4937 281.2583 22.627 281.2583 28.8345 c
281.2583 41.4834 275.8833 47.6016 276.2065 58.0679 c
276.4214 65.0068 282.8013 71.9648 283.2788 79.7578 c
283.5513 84.1626 280.7769 88.2915 280.2476 92.9614 c
277.2817 119.1597 281.2603 150.189 279.2378 175.9468 c
f
284.2896 69.3857 m
281.8228 66.2593 279.7983 55.083 277.2173 58.0679 C
277.144 55.2539 278.8862 49.2373 279.2378 51.4683 c
280.6226 60.231 287.8413 65.5513 284.2896 69.3857 C
f
284.2896 109.936 m
283.6362 125.6748 285.6118 148.8848 283.2788 159.9141 C
283.9341 144.1768 281.9585 120.9648 284.2896 109.936 C
f
284.2896 98.6177 m
284.9165 100.8345 284.0688 109.8901 283.2788 107.106 c
282.6519 104.8906 283.5005 95.833 284.2896 98.6177 c
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.203922 0.607843 0.945098 0.058824 k
 0.203922 0.607843 0.945098 0.058824 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d0 XR
390.4341 164.1577 m
388.6685 199.2451 407.6255 238.3291 391.4448 268.1304 c
391.3872 268.2358 391.3521 268.3691 391.3003 268.4839 C
391.3003 360 L
384.3608 360 L
384.3608 239.3418 L
384.4272 239.3418 L
384.3921 235.79 384.3726 232.3325 384.3726 229.0127 c
384.3726 206.0161 383.1802 182.0972 384.3726 161.0688 c
385.0786 148.6343 388.5913 136.8931 389.4243 125.0396 c
391.8804 90.1079 384.6587 66.4414 384.3726 36.5078 c
384.355 34.6289 384.3608 28.9946 Y
384.3608 0 L
391.3003 0 L
391.3003 21.8066 L
391.3159 21.8008 391.3325 21.7949 391.3481 21.7886 C
391.3325 22.0181 391.3159 22.2534 391.3003 22.4888 C
391.3003 28.9946 L
390.3921 52.3359 391.4448 58.1255 v
395.604 80.999 397.0962 102.5044 395.4858 125.0396 c
394.5728 137.8442 391.1196 150.5508 390.4341 164.1577 c
f
1 XR
141.5444 72.2759 m
143.6519 56.4053 142.29 39.7856 142.29 20.4185 C
144.6362 26.106 142.4028 43.8311 143.9785 44.1138 c
145.7632 44.437 145.333 27.3911 144.7896 21.5859 c
144.145 14.7061 144.3296 3.76221 144.3315 3.76221 C
144.3315 0 L
146.2998 0 L
146.2998 4.34521 L
146.2979 232.5894 146.2524 355.6738 V
146.2998 360 L
144.3315 360 L
144.3315 355.6738 L
143.2158 182.875 144.311 109.5811 v
144.4966 97.2129 144.1401 86.9224 143.4907 75.8154 c
143.4731 75.5103 143.4932 88.7437 142.8418 88.3706 C
142.8418 88.0347 140.7324 78.3931 141.5444 72.2759 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.184314 0.533333 0.87451 0.027451 k
 0.184314 0.533333 0.87451 0.027451 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d0 XR
117.5171 297.4624 m
114.5938 268.4575 115.0879 231.2837 117.5171 199.1357 c
118.7207 183.1904 122.6802 167.7954 123.5791 152.1567 c
124.7788 131.2764 122.7388 110.5127 123.5791 90.9761 c
124.7119 64.6411 117.5566 51.6606 117.5566 25.2915 c
117.5566 15.2759 117.5566 0 Y
121.7241 0 L
121.7666 13.9102 121.7666 23.7432 v
121.7666 47.9868 128.6753 68.0352 127.6206 93.1616 c
126.8311 111.9321 128.7295 132.5488 127.6206 153.251 c
126.7466 169.5352 122.6045 185.5469 121.5586 202.4141 c
120.626 217.4453 121.5586 234.5879 121.5586 250.4834 c
121.5586 267.436 119.6187 284.9229 121.5586 298.5542 c
122.4365 304.7334 125.9502 310.3589 126.6104 316.0347 c
127.3442 322.3516 121.7241 333.6953 121.7241 340.0884 c
121.7241 346.9443 121.7241 360 Y
117.5566 360 L
117.5845 334.3115 L
117.4165 325.1274 123.8052 323.9619 122.5688 314.9419 c
121.6836 308.4834 118.0776 303.0313 117.5171 297.4624 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.203922 0.607843 0.945098 0.058824 k
 0.203922 0.607843 0.945098 0.058824 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d1 XR
107.1997 272.0786 m
107.77 268.2524 106.6758 264.1685 107.1997 260.3257 c
108.0562 254.0464 108.0562 238.6899 107.1997 232.4106 c
107.0034 230.9702 107.1255 229.4702 107.1997 228.0039 c
108.0435 211.208 108.8828 184.4277 107.1997 167.7676 C
107.1997 159.4424 106.0854 150.958 107.1997 142.7905 c
108.0562 136.5132 107.5615 121.2559 107.1997 114.8779 c
106.6982 106.0454 107.1997 39.9478 107.1997 4.68604 C
107.2007 4.68604 107.2036 0 Y
109.2241 0 L
109.2202 5.3374 L
109.2202 28.6284 109.2202 51.9194 109.2202 75.209 c
109.2202 78.1465 109.2202 81.085 109.2202 84.0234 c
109.2202 104.103 109.2202 124.1821 109.2202 144.2617 c
109.2202 149.647 109.2202 155.0366 109.2202 160.4209 c
109.2202 181.9688 109.2202 203.5186 109.2202 225.0645 c
109.2202 235.3496 109.2202 245.6343 109.2202 255.9194 c
109.2202 262.2861 109.2202 268.6509 109.2202 275.0181 c
109.2202 278.9346 109.2202 282.853 109.2202 286.771 c
109.2202 302.9326 109.2202 319.0938 109.2202 335.2534 c
109.2202 337.7026 109.2202 340.1533 109.2202 342.5991 c
109.2202 346.6299 109.2202 350.6582 109.2202 354.6836 C
109.2241 354.6836 L
109.2241 360 L
107.2036 360 L
107.2036 358.4146 L
107.1997 358.4146 L
107.1997 354.124 107.1997 349.8311 107.1997 345.5386 c
107.1997 324.9712 106.4429 304.374 107.1997 283.832 c
107.4404 277.3018 106.4883 276.8535 107.1997 272.0786 c
f
1.11377 272.0859 m
1.68408 268.2593 0.589844 264.1753 1.11377 260.332 c
1.97021 254.0522 1.97021 238.6943 1.11377 232.4146 c
0.91748 230.9741 1.04004 229.4741 1.11377 228.0078 c
1.95752 211.2104 2.79736 184.4282 1.11377 167.7666 C
1.11377 159.4409 0 150.9556 1.11377 142.7876 c
1.97021 136.5098 1.47607 121.2515 1.11377 114.873 c
0.612793 106.0396 1.11377 39.9365 1.11377 4.67236 C
1.11475 4.67236 1.11768 0 Y
3.13867 0 L
3.13477 5.32373 L
3.13477 28.6167 3.13477 51.9092 3.13477 75.2007 c
3.13477 78.1387 3.13477 81.0771 3.13477 84.0156 c
3.13477 104.0972 3.13477 124.1777 3.13477 144.2588 c
3.13477 149.6445 3.13477 155.0347 3.13477 160.4194 c
3.13477 181.9688 3.13477 203.5205 3.13477 225.0679 c
3.13477 235.354 3.13477 245.6396 3.13477 255.9253 c
3.13477 262.2925 3.13477 268.6577 3.13477 275.0254 c
3.13477 278.9424 3.13477 282.8613 3.13477 286.7793 c
3.13477 302.9424 3.13477 319.1045 3.13477 335.2656 c
3.13477 337.7148 3.13477 340.166 3.13477 342.6118 c
3.13477 346.6431 3.13477 350.6714 3.13477 354.6973 C
3.13867 354.6973 L
3.13867 360 L
1.11768 360 L
1.11768 358.4287 L
1.11377 358.4287 L
1.11377 354.1377 1.11377 349.8442 1.11377 345.5518 c
1.11377 324.9824 0.356934 304.3838 1.11377 283.8403 c
1.35449 277.3096 0.402344 276.8613 1.11377 272.0859 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.184314 0.533333 0.87451 0.027451 k
 0.184314 0.533333 0.87451 0.027451 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d1 XR
95.0796 130.166 m
98.5938 92.8149 93.8066 54.6738 94.8032 18.1392 c
94.9268 13.6133 94.8032 0 Y
98.9707 0 L
98.9463 15.3491 98.8506 20.4546 v
98.1953 55.519 101.4819 90.5376 99.1206 123.2158 c
98.1675 136.4072 93.3301 147.9448 94.0693 160.5825 c
97.0664 211.8364 98.5044 265.6011 98.9434 320.1538 c
98.979 324.4722 98.9736 336.0967 98.9717 339.5767 C
98.9927 360 L
94.8247 360 L
94.8247 340.5752 L
94.3633 326.9531 94.0957 321.6709 v
92.5518 291.1016 89.5137 189.3286 95.0796 130.166 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.203922 0.607843 0.945098 0.058824 k
 0.203922 0.607843 0.945098 0.058824 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d1 XR
229.4507 87.9526 m
230.021 91.7798 228.9268 95.8628 229.4507 99.7056 c
230.3071 105.9849 230.3071 121.3413 229.4507 127.6211 c
229.2544 129.0615 229.377 130.562 229.4507 132.0283 c
230.2944 148.8228 231.1343 175.604 229.4507 192.2642 C
229.4507 200.5879 228.3369 209.0732 229.4507 217.2402 c
230.3071 223.5181 229.813 238.7759 229.4507 245.1538 c
228.9497 253.9868 229.4507 320.084 229.4507 355.3452 C
229.4517 355.3452 229.4546 360 Y
231.4756 360 L
231.4717 354.6938 L
231.4717 331.4023 231.4717 308.1113 231.4717 284.8223 c
231.4717 281.8838 231.4717 278.9468 231.4717 276.0078 c
231.4717 255.9287 231.4717 235.8496 231.4717 215.77 c
231.4717 210.3848 231.4717 204.9951 231.4717 199.6104 c
231.4717 178.062 231.4717 156.5127 231.4717 134.9668 c
231.4717 124.6826 231.4717 114.3984 231.4717 104.1123 c
231.4717 97.7451 231.4717 91.3818 231.4717 85.0137 c
231.4717 81.0972 231.4717 77.1768 231.4717 73.2612 c
231.4717 57.0981 231.4717 40.938 231.4717 24.7778 c
231.4717 22.3296 231.4717 19.8789 231.4717 17.4316 c
231.4717 13.4028 231.4717 9.37256 231.4717 5.34766 C
231.4756 5.34766 L
231.4756 0 L
229.4546 0 L
229.4546 1.61768 L
229.4507 1.61768 L
229.4507 5.90674 229.4507 10.1992 229.4507 14.4932 c
229.4507 35.061 228.6938 55.6587 229.4507 76.1992 c
229.6914 82.73 228.7393 83.1777 229.4507 87.9526 c
f
150.644 87.9526 m
151.2144 91.7798 150.1201 95.8628 150.644 99.7056 c
151.5005 105.9849 151.5005 121.3413 150.644 127.6211 c
150.4478 129.0615 150.5703 130.562 150.644 132.0283 c
151.4878 148.8228 152.3276 175.604 150.644 192.2642 C
150.644 200.5879 149.5303 209.0732 150.644 217.2402 c
151.5005 223.5181 151.0063 238.7759 150.644 245.1538 c
150.1431 253.9868 150.644 320.084 150.644 355.3452 C
150.645 355.3452 150.6479 360 Y
152.6689 360 L
152.665 354.6938 L
152.665 331.4023 152.665 308.1113 152.665 284.8223 c
152.665 281.8838 152.665 278.9468 152.665 276.0078 c
152.665 255.9287 152.665 235.8496 152.665 215.77 c
152.665 210.3848 152.665 204.9951 152.665 199.6104 c
152.665 178.062 152.665 156.5127 152.665 134.9668 c
152.665 124.6826 152.665 114.3984 152.665 104.1123 c
152.665 97.7451 152.665 91.3818 152.665 85.0137 c
152.665 81.0972 152.665 77.1768 152.665 73.2612 c
152.665 57.0981 152.665 40.938 152.665 24.7778 c
152.665 22.3296 152.665 19.8789 152.665 17.4316 c
152.665 13.4028 152.665 9.37256 152.665 5.34766 C
152.6689 5.34766 L
152.6689 0 L
150.6479 0 L
150.6479 1.61768 L
150.644 1.61768 L
150.644 5.90674 150.644 10.1992 150.644 14.4932 c
150.644 35.061 149.8877 55.6587 150.644 76.1992 c
150.8853 82.73 149.9331 83.1777 150.644 87.9526 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.184314 0.533333 0.87451 0.027451 k
 0.184314 0.533333 0.87451 0.027451 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d1 XR
217.3306 229.8657 m
220.8452 267.2158 216.0581 305.3569 217.0542 341.8926 c
217.1777 346.418 217.0542 360 Y
221.2222 360 L
221.1973 344.6826 221.1016 339.5767 v
220.4468 304.5122 223.7329 269.4937 221.3721 236.8154 c
220.4189 223.6235 215.5815 212.0864 216.3203 199.4487 c
219.3179 148.1938 220.7554 94.4307 221.1943 39.877 c
221.23 35.5591 221.2251 23.9336 221.2231 20.4546 C
221.2437 0 L
217.0762 0 L
217.0762 19.4565 L
216.6143 33.0776 216.3472 38.3613 v
214.8027 68.9307 211.7651 170.7012 217.3306 229.8657 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.094972 0.322728 0.598901 0 k
 0.094972 0.322728 0.598901 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d1 XR
6.15576 215.4268 m
6.69434 210.1079 9.99463 201.5513 10.1973 196.4766 c
12.3184 143.3779 6.53662 82.5532 9.18652 23.9282 C
9.2085 23.9282 L
9.2085 0 L
12.2393 0 L
12.2373 18.3281 12.2393 24.4502 v
12.2422 33.2725 17.3779 155.2202 12.2178 196.4766 c
11.4697 202.4595 10.1753 209.1377 9.18652 215.4268 c
7.78955 224.3091 7.24512 229.9526 9.18652 239.3623 c
9.80225 242.3418 10.2285 246.2446 10.1973 250.334 c
10.0776 266.3579 11.8726 295.8198 12.2393 310.9878 c
12.3916 317.252 12.2393 336.0464 Y
12.2393 360 L
9.2085 360 L
9.2085 336.0464 L
9.104 312.2065 9.104 312.1743 v
8.93408 301.9512 7.16602 288.9683 7.16602 283.249 c
7.16602 260.6597 4.06006 236.125 6.15576 215.4268 c
f
131.126 144.5488 m
131.665 149.8677 134.9653 158.4248 135.1675 163.499 c
137.2886 216.5972 131.5068 277.4219 134.1572 336.0464 C
134.1787 336.0464 L
134.1787 360 L
137.21 360 L
137.208 341.647 137.21 335.5249 v
137.2129 326.7026 142.3486 204.7544 137.188 163.499 c
136.4404 157.5176 135.146 150.8379 134.1572 144.5488 c
132.7603 135.6665 132.2153 130.0234 134.1572 120.6128 c
134.7729 117.6328 135.1992 113.7305 135.1675 109.6416 c
135.0483 93.6177 136.8428 64.1543 137.21 48.9868 c
137.3618 42.7241 137.21 23.9282 Y
137.21 0 L
134.1787 0 L
134.1787 23.9282 L
134.0742 47.7681 134.0742 47.8013 v
133.9048 58.0244 132.1362 71.0068 132.1362 76.7266 c
132.1362 99.3154 129.0303 123.8511 131.126 144.5488 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.164706 0.482353 0.815686 0.015686 k
 0.164706 0.482353 0.815686 0.015686 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d1 XR
48.0811 0 m
42.019 0 L
42.019 119.9897 42.019 239.9907 42.019 359.9805 C
44.0396 359.9805 46.0601 360 48.0811 360 C
48.0811 240.0103 48.0811 119.9897 48.0811 0 C
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.184314 0.533333 0.87451 0.027451 k
 0.184314 0.533333 0.87451 0.027451 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d1 XR
25.5454 0 m
25.5454 336.002 25.5454 360 V
25.208 360 24.8726 360 24.5352 360 C
24.5352 336.002 24.5352 0 Y
25.5454 0 L
f
501.4155 0 m
501.4155 41.8247 501.4155 360 Y
500.4058 360 L
500.4058 41.8247 500.4058 0 V
500.7427 0 501.0786 0 501.4155 0 C
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.164706 0.482353 0.815686 0.015686 k
 0.164706 0.482353 0.815686 0.015686 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d1 XR
35.4814 0 m
35.4814 119.9897 35.4814 240.0117 35.4814 360 C
33.124 360 30.7661 360 28.4087 360 C
28.4087 240.0117 28.4087 120.0078 28.4087 0.02002 C
35.4814 0 L
f
55.7036 0 m
57.9141 0 L
57.7886 83.5771 58.7192 96.52 v
58.8662 98.5708 59.2192 100.6982 58.7192 102.6904 c
57.853 106.1387 57.2725 115.9058 58.7192 119.1465 c
61.2451 124.8037 56.6982 125.0591 59.7295 129.4307 c
63.6128 135.0313 62.9224 143.9644 59.7295 150 c
57.9614 153.3428 57.4561 156.9429 59.7295 160.2847 c
83.7173 195.5542 59.8813 256.8589 57.9219 288.9722 c
56.8306 306.8638 57.9141 346.4116 Y
57.9141 360 L
55.7036 360 L
55.7036 349.7969 55.7036 346.4116 v
55.7017 332.2773 55.688 289.8721 Y
55.688 289.5708 55.7036 0 Y
f
207.749 360 m
205.5391 360 L
205.6636 276.3936 204.7329 263.4531 v
204.5859 261.4023 204.2329 259.2749 204.7329 257.2817 c
205.5991 253.833 206.1792 244.0674 204.7329 240.8276 c
202.207 235.1699 206.7534 234.9136 203.7227 230.5425 c
199.8394 224.9424 200.5298 216.0098 203.7227 209.9727 c
205.4907 206.6304 205.9961 203.0303 203.7227 199.6885 c
179.7358 164.4194 203.5718 103.1118 205.5303 71.001 c
206.6226 53.1069 205.5391 13.5605 Y
205.5391 0 L
207.749 0 L
207.748 10.1763 207.749 13.5605 v
207.751 27.6963 207.7642 70.1016 Y
207.7642 70.4009 207.749 360 Y
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.156863 0.423529 0.756863 0.003922 k
 0.156863 0.423529 0.756863 0.003922 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d0 XR
41.5435 0 m
41.5435 360 L
39.5225 360 L
39.5225 0 L
41.5435 0 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.109804 0.337255 0.658824 0 k
 0.109804 0.337255 0.658824 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d1 XR
47.2681 215.4268 m
47.8066 210.1079 51.1069 201.5513 51.3091 196.4766 c
53.4307 143.3779 47.6489 82.5532 50.2988 23.9282 C
50.3208 23.9282 L
50.3208 0 L
53.3516 0 L
53.3198 18.894 53.3516 24.4502 v
53.4009 33.2725 58.4902 155.2202 53.3301 196.4766 c
52.582 202.4595 51.2876 209.1377 50.2988 215.4268 c
48.9019 224.3091 48.3569 229.9526 50.2988 239.3623 c
50.9136 242.3418 51.3398 246.2446 51.3091 250.334 c
51.1899 266.3579 52.9844 295.8198 53.3516 310.9878 c
53.5024 317.252 53.3516 336.0464 Y
53.3516 360 L
50.3208 360 L
50.3208 336.0464 L
50.2158 312.2065 50.2148 312.1743 v
50.0464 301.9512 48.2783 288.9683 48.2783 283.249 c
48.2783 260.6597 45.1724 236.125 47.2681 215.4268 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.164706 0.482353 0.815686 0.015686 k
 0.164706 0.482353 0.815686 0.015686 K
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d1 XR
160.7637 175.9697 m
160.3696 180.9854 160.3413 186.043 160.7637 191.0566 c
161.3486 198.0112 163.105 222.1523 160.7637 228.7764 C
160.7637 233.4937 161.5518 242.5044 162.7842 246.6943 c
170.2139 271.9683 163.2617 308.6709 162.7715 340.9224 C
162.7754 340.9224 162.7803 340.9224 162.7842 340.9224 C
162.7842 349.8691 L
162.7842 350.5693 L
162.7842 360 L
168.3579 360 L
168.3579 350.5693 L
168.3579 349.8691 L
168.3579 340.9653 L
170.5825 279.752 165.9028 191.9146 168.8462 119.3872 c
169.1738 111.3164 167.4521 103.106 168.8462 95.812 c
170.5874 86.7041 177.9668 79.6445 174.9082 70.3477 c
172.7642 63.833 163.4087 60.4287 161.7739 52.4321 c
158.7021 37.4141 168.3242 42.6079 168.3472 10.1377 C
168.3579 10.1377 L
168.3579 0 L
162.7842 0 L
162.7842 9.99609 L
162.7842 10.0439 162.7842 10.1377 v
162.7842 11.5156 162.7842 22.6484 162.7842 28.8555 c
162.7842 41.5039 157.4077 47.623 157.7324 58.0889 c
157.9478 65.0293 164.3262 71.9858 164.8047 79.7788 c
165.0762 84.1846 162.3027 88.3125 161.7739 92.9824 c
158.8071 119.1802 162.7852 150.2109 160.7637 175.9697 c
f
165.8149 69.4067 m
163.3477 66.2803 161.3228 55.104 158.7427 58.0889 C
158.6689 55.2744 160.4111 49.2583 160.7637 51.4902 c
162.1489 60.2515 169.3662 65.5728 165.8149 69.4067 C
f
165.8149 109.958 m
165.1611 125.6963 167.1362 148.9058 164.8047 159.936 C
165.459 144.1987 163.4839 120.9854 165.8149 109.958 C
f
165.8149 98.6382 m
166.4429 100.8564 165.5942 109.9111 164.8047 107.1279 c
164.1772 104.9121 165.0259 95.8545 165.8149 98.6382 c
f
*U
*u
187.7515 184.0386 m
188.145 179.0225 188.1738 173.9624 187.7515 168.9482 c
187.1665 161.9971 185.4102 137.8535 187.7515 131.2305 C
187.7515 126.5142 186.9634 117.501 185.731 113.313 c
178.3013 88.0366 185.2534 51.3345 185.7437 19.0845 C
185.7397 19.0845 185.7349 19.0845 185.731 19.0845 C
185.731 10.1377 L
185.731 9.43652 L
185.731 0 L
180.1572 0 L
180.1572 9.43652 L
180.1572 10.1377 L
180.1572 19.043 L
177.9321 80.2549 182.6118 168.0898 179.6689 240.6201 c
179.3413 248.6914 181.063 256.8989 179.6689 264.1943 c
177.9272 273.3022 170.5483 280.3633 173.6069 289.6577 c
175.751 296.1714 185.1064 299.5781 186.7412 307.5752 c
189.8125 322.5903 180.1909 317.3999 180.168 349.8682 C
180.1572 349.8682 L
180.1572 360 L
185.731 360 L
185.731 350.0107 L
185.731 349.9619 185.731 349.8682 v
185.731 348.4907 185.731 337.3569 185.731 331.1499 c
185.731 318.501 191.1074 312.3838 190.7827 301.9165 c
190.5674 294.9785 184.189 288.0195 183.7104 280.2261 c
183.439 275.8213 186.2124 271.6929 186.7412 267.0229 c
189.708 240.8257 185.73 209.7964 187.7515 184.0386 c
f
182.6997 290.5991 m
185.1675 293.7246 187.1919 304.9014 189.7725 301.9165 C
189.8462 304.7314 188.104 310.7471 187.7515 308.5171 c
186.3662 299.7529 179.1489 294.4341 182.6997 290.5991 C
f
182.6997 250.0488 m
183.354 234.3101 181.3789 211.0996 183.7104 200.0698 C
183.0562 215.8081 185.0313 239.019 182.6997 250.0488 C
f
182.6997 261.3667 m
182.0723 259.1504 182.9209 250.0938 183.7104 252.8799 c
184.3379 255.0947 183.4893 264.1509 182.6997 261.3667 c
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.203922 0.607843 0.945098 0.058824 k
 0.203922 0.607843 0.945098 0.058824 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d0 XR
76.5552 195.8271 m
78.3218 160.7388 59.3643 121.6548 75.5444 91.854 c
75.6021 91.75 75.6382 91.6152 75.6885 91.5 C
75.6885 0 L
82.6299 0 L
82.6299 120.6426 L
82.5625 120.6426 L
82.5981 124.1943 82.6172 127.6528 82.6172 130.9712 c
82.6172 153.9692 83.8091 177.8877 82.6172 198.9155 c
81.9116 211.3511 78.3979 223.0918 77.5654 234.9463 c
75.1084 269.8774 82.3311 293.5425 82.6172 323.4761 c
82.6348 325.354 82.6299 330.9888 Y
82.6299 360 L
75.6885 360 L
75.6885 338.1782 L
75.6729 338.1841 75.6582 338.1904 75.6421 338.1963 C
75.6582 337.9678 75.6738 337.7305 75.6885 337.4951 C
75.6885 330.9888 L
76.5981 307.6504 75.5444 301.8584 v
71.3848 278.9863 69.894 257.4805 71.5034 234.9463 c
72.418 222.1401 75.8701 209.4351 76.5552 195.8271 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.184314 0.533333 0.87451 0.027451 k
 0.184314 0.533333 0.87451 0.027451 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d1 XR
306.5327 271.4478 m
304.8813 209.1348 306.687 147.6792 v
307.0425 135.5288 307.103 129.5933 305.9917 110.478 c
304.6167 86.8008 303.9399 38.5215 y
310.4341 107.1899 310.9897 135.9639 v
312.3579 206.8906 312.0894 233.0508 306.5327 271.4478 c
f
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginBrushPattern
(Unnamed Brush Pat 40)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7688.4521 7689.5967 m
-7296.6909 7689.5967 L
-7296.6909 7597.9077 L
-7688.4521 7597.9077 L
-7688.4521 7689.5967 L
n
0 O
0 0 0 1 k
1 XR
-7301.3535 7631.9199 m
-7303.1113 7631.9199 -7422.7817 7634.0918 -7498.6519 7635.4717 C
-7519.4663 7634.5352 -7540.2529 7633.2222 -7561.0547 7631.5024 C
-7563.5327 7631.1509 -7566.3472 7630.7949 -7567.8584 7630.6006 c
-7568.7114 7630.4863 -7569.5732 7630.3853 -7570.4375 7630.2935 C
-7569.9829 7630.0605 -7569.54 7629.7998 -7569.1167 7629.4941 C
-7568.25 7628.7324 -7567.3955 7627.8325 -7566.8735 7626.4541 C
-7566.8979 7626.1685 -7566.6997 7625.8188 -7566.6523 7625.5293 c
-7566.5532 7624.9116 -7566.6382 7624.1631 -7566.7319 7623.6274 c
-7566.7939 7623.2725 -7566.9551 7623.0254 -7567.0259 7622.7314 c
-7567.0488 7622.6348 -7566.9785 7622.5757 -7567.0059 7622.5024 c
-7567.1396 7622.1484 -7567.5313 7621.5518 -7567.7539 7621.2261 c
-7567.8579 7621.0757 -7567.9873 7620.9775 -7568.1035 7620.8188 c
-7568.1196 7620.7964 -7568.0669 7620.7349 -7568.0928 7620.7061 c
-7568.6484 7620.0664 -7569.4312 7619.5415 -7570.3955 7619.0757 c
-7570.4546 7619.0508 -7570.4639 7619.1445 -7570.5366 7619.0869 C
-7570.8213 7618.9653 -7571.1143 7618.8535 -7571.3945 7618.7915 c
-7572.8965 7618.4629 -7574.7163 7618.8477 -7575.8027 7619.6328 c
-7576.7998 7620.3555 -7577.5308 7621.8623 -7577.4678 7623.0742 c
-7577.4126 7624.1094 -7576.6665 7625.2573 -7575.4458 7626.0352 c
-7574.3604 7626.7295 -7573.0479 7626.9829 -7572.2373 7626.3589 C
-7572.6499 7626.2295 -7572.9688 7626.0332 -7573.0811 7625.7524 C
-7573.0908 7625.4766 -7573.0967 7625.1992 -7572.8755 7624.8589 C
-7572.4517 7624.4863 -7571.7925 7624.2485 -7571.1235 7624.7158 c
-7570.1846 7625.3701 -7570.0728 7626.7886 -7571.0342 7627.5356 C
-7571.3086 7627.6406 -7571.5586 7627.8789 -7571.75 7627.9829 c
-7572.1826 7628.2192 -7572.5586 7628.3853 -7572.9751 7628.5435 c
-7574.0938 7628.9595 -7575.4839 7629.4185 -7576.5327 7629.5967 c
-7576.7114 7629.6284 -7576.8989 7629.6475 -7577.0806 7629.6733 C
-7580.4038 7629.3789 -7583.54 7629.0693 -7586.1416 7628.5264 C
-7586.1138 7628.5225 -7586.0908 7628.5244 -7586.0586 7628.5205 c
-7585.2378 7628.4199 -7584.6309 7628.2524 -7583.9043 7628.0127 c
-7583.6328 7627.9238 -7583.3184 7627.9116 -7583.0825 7627.8149 c
-7582.9985 7627.7856 -7582.9409 7627.6597 -7582.8472 7627.6133 c
-7582.5371 7627.46 -7582.2129 7627.3662 -7581.8999 7627.1597 c
-7580.9097 7626.5054 -7579.8774 7625.3359 -7579.7617 7623.8677 C
-7579.9463 7622.8262 -7580.3643 7621.8525 -7581.5938 7621.0781 c
-7581.7217 7620.9951 -7581.8662 7620.96 -7581.9995 7620.8828 C
-7583.8516 7620.2168 -7585.5913 7621.3135 -7585.8066 7623.2061 C
-7585.7119 7623.3755 -7585.6499 7623.5527 -7585.6616 7623.7524 C
-7585.2939 7624.4492 -7583.9033 7625.0557 -7583.3057 7624.6143 C
-7583.6133 7624.5566 -7583.7495 7624.5254 -7583.8638 7624.2637 C
-7583.8892 7623.6069 -7583.0679 7623.4336 -7582.6528 7624.0176 C
-7582.4966 7624.7021 -7582.7676 7625.2524 -7583.2939 7625.8101 c
-7583.5068 7626.0352 -7583.7837 7626.1685 -7584.0566 7626.3545 c
-7584.4199 7626.6016 -7584.7495 7626.8828 -7585.1118 7627.0332 c
-7585.4385 7627.1685 -7585.8115 7627.2012 -7586.1445 7627.2886 c
-7586.2349 7627.3101 -7586.2969 7627.3613 -7586.3706 7627.3789 c
-7586.6274 7627.4336 -7586.8359 7627.5142 -7587.0879 7627.5469 c
-7587.4209 7627.5854 -7587.7739 7627.5488 -7588.1528 7627.5854 c
-7588.3398 7627.6055 -7588.5195 7627.6943 -7588.7144 7627.7109 c
-7588.8413 7627.7207 -7588.9722 7627.7207 -7589.1025 7627.7222 C
-7591.8135 7626.8213 -7594.0957 7625.6094 -7595.9814 7623.2783 c
-7599.6704 7618.7222 -7594.0415 7614.5566 -7592.9902 7618.5967 C
-7594.9668 7620.0352 -7598.5874 7623.1196 -7590.8892 7623.2471 C
-7582.6045 7621.7549 -7589.6982 7606.4917 -7599.6509 7610.5576 c
-7608.0151 7613.9741 -7604.1328 7622.6382 -7598.4658 7626.2935 c
-7589.9902 7631.7559 -7580.5376 7632.4917 -7570.7012 7632.5845 C
-7581.3862 7637.0488 -7595.9243 7634.4028 -7603.9897 7626.3804 c
-7608.1011 7622.2935 -7612.0435 7615.9912 -7610.8193 7609.8896 c
-7609.5742 7603.6816 -7603.1616 7609.4238 -7608.0957 7609.4424 C
-7607.8896 7615.0054 -7594.6387 7608.9648 -7600.9307 7600.8271 c
-7606.6011 7593.4917 -7616.5698 7601.5225 -7618.3242 7607.9478 c
-7624.0239 7628.8359 -7594.3545 7634.7119 -7580.3813 7635.4238 C
-7592.1143 7638.7749 -7608.3892 7636.2734 -7619.5547 7631.7856 c
-7623.9663 7630.0093 -7628.9707 7626.8926 -7631.5479 7622.7773 c
-7635.4619 7616.5264 -7628.4268 7612.2837 -7627.8955 7614.4028 c
-7627.4697 7616.0957 -7633.3765 7616.6235 -7628.8267 7619.6992 c
-7624.8091 7622.4185 -7621.2759 7616.2095 -7620.4619 7613.0781 c
-7616.6782 7598.5317 -7638.0601 7600.4604 -7640.3667 7614.1982 c
-7645.5103 7644.8267 -7599.3071 7638.4575 -7583.4902 7637.5928 C
-7583.7124 7637.7612 -7583.9331 7637.9189 -7584.1543 7638.0825 C
-7589.4346 7639.5854 -7594.6416 7641.7861 -7599.46 7644.5469 C
-7613.9546 7646.2813 -7626.7495 7635.8901 -7642.5913 7630.6152 c
-7651.5635 7627.6284 -7662.0933 7631.9277 -7670.2778 7627.3145 c
-7674.6235 7624.8545 -7677.6982 7622.2656 -7679.2959 7617.0518 C
-7680.9092 7608.1104 -7671.2979 7606.9717 -7673.1396 7611.6416 C
-7674.8428 7611.9688 -7674.1772 7610.8345 -7675.3354 7610.8413 C
-7679.2861 7614.5479 -7671.0244 7619.7314 -7667.1606 7616.4316 c
-7660.4497 7610.7031 -7665.2563 7602.3325 -7672.0864 7600.0557 C
-7690.5703 7600.25 -7691 7622.8613 -7685.0474 7635.3589 c
-7669.2217 7668.5854 -7635.1445 7656.5825 -7607.5376 7649.5479 C
-7611.2817 7652.0732 -7613.8975 7655.6421 -7616.5747 7659.2158 c
-7621.2197 7665.4165 -7623.6694 7674.8545 -7615.0024 7678.8613 C
-7614.1616 7682.9829 -7612.6392 7686.8853 -7608.5669 7688.7695 c
-7603.7471 7691 -7598.8457 7688.5581 -7597.5508 7683.4512 C
-7597.4766 7680.6719 -7598.1968 7678.8262 -7600.5938 7677.3887 c
-7602.1733 7676.4414 -7607.5176 7676.5308 -7604.8574 7679.5342 C
-7602.9663 7678.0415 -7603.1323 7680.4863 -7604.0112 7681.6006 C
-7606.8823 7681.5693 -7607.5771 7679.4863 -7607.5156 7676.5181 c
-7607.5151 7676.4956 -7607.5142 7676.4688 -7607.5146 7676.4429 C
-7607.3574 7669.1367 -7606.1343 7663.3237 -7604.0718 7658.7285 C
-7604.0713 7658.73 -7604.0708 7658.7314 -7604.0698 7658.7324 c
-7603.8242 7659.2158 -7603.4819 7659.5 -7603.2485 7659.8945 c
-7603.1729 7660.0225 -7603.2495 7660.1382 -7603.1753 7660.2334 c
-7602.8262 7660.6855 -7601.9971 7661.3701 -7601.5313 7661.7397 c
-7601.3135 7661.9116 -7601.0835 7661.9985 -7600.8477 7662.1724 c
-7600.8125 7662.1973 -7600.8613 7662.3101 -7600.8115 7662.3413 c
-7599.7256 7663.0176 -7598.3638 7663.4277 -7596.7661 7663.6709 C
-7596.6699 7663.6816 -7596.6978 7663.5435 -7596.5669 7663.5933 C
-7596.1035 7663.6406 -7595.6309 7663.6733 -7595.1982 7663.6382 c
-7592.8862 7663.4453 -7590.4316 7662.0845 -7589.2129 7660.4668 c
-7588.0942 7658.9854 -7587.7095 7656.4854 -7588.3379 7654.7642 c
-7588.8774 7653.2949 -7590.4629 7651.9692 -7592.5684 7651.3901 c
-7594.4419 7650.8735 -7596.4492 7651.0845 -7597.3408 7652.3477 C
-7596.6875 7652.3535 -7596.1406 7652.4941 -7595.8545 7652.8477 C
-7595.7178 7653.2422 -7595.5859 7653.6382 -7595.7539 7654.2261 C
-7596.2002 7654.9541 -7597.0469 7655.5894 -7598.2178 7655.2124 c
-7599.4604 7654.8135 -7600.2119 7653.5781 -7600.0532 7652.3486 C
-7594.7505 7646.2031 -7587.0386 7643.6465 -7578.2539 7643.0527 C
-7578.2886 7643.0688 -7578.3218 7643.0796 -7578.3604 7643.0972 c
-7579.5015 7643.6064 -7580.3027 7644.1143 -7581.2437 7644.7832 c
-7581.5957 7645.0332 -7582.0439 7645.1909 -7582.3428 7645.4316 c
-7582.4492 7645.5166 -7582.4766 7645.7222 -7582.5913 7645.8301 c
-7582.9707 7646.1895 -7583.3975 7646.4688 -7583.7563 7646.9063 c
-7584.8945 7648.2886 -7585.8662 7650.4341 -7585.3809 7652.6016 C
-7584.6523 7654.0225 -7583.6162 7655.2437 -7581.4995 7655.8145 c
-7581.2788 7655.8755 -7581.0542 7655.8623 -7580.8276 7655.9185 C
-7577.8613 7656.0527 -7575.8369 7653.7017 -7576.3667 7650.8755 C
-7576.5781 7650.6733 -7576.7471 7650.4429 -7576.8184 7650.1509 C
-7577.6582 7649.3101 -7579.9336 7649.0508 -7580.5996 7649.9517 C
-7580.1309 7649.9004 -7579.9199 7649.8848 -7579.6387 7650.2109 C
-7579.3105 7651.1475 -7580.4189 7651.7612 -7581.2759 7651.1045 C
-7581.8052 7650.1865 -7581.6587 7649.2695 -7581.1479 7648.2314 c
-7580.9409 7647.8101 -7580.5991 7647.5 -7580.2881 7647.1104 c
-7579.8735 7646.5933 -7579.5239 7646.0415 -7579.0669 7645.6621 c
-7578.6563 7645.3232 -7578.1318 7645.1094 -7577.6899 7644.8364 c
-7577.5708 7644.7642 -7577.5039 7644.6636 -7577.4043 7644.6069 c
-7577.0596 7644.4111 -7576.7935 7644.2031 -7576.4438 7644.0469 c
-7575.9819 7643.8413 -7575.4561 7643.7373 -7574.9253 7643.5142 c
-7574.6636 7643.4063 -7574.4443 7643.1948 -7574.1709 7643.0854 c
-7574.0063 7643.0215 -7573.8311 7642.9688 -7573.6592 7642.9141 C
-7572.2695 7642.9185 -7570.8613 7642.9575 -7569.4375 7643.0342 c
-7567.7285 7643.0796 -7565.4653 7643.0933 -7563.5728 7643.1665 C
-7531.4688 7639.6533 -7498.98 7638.73 -7466.4746 7638.2822 C
-7393.0664 7639.6152 -7302.8774 7641.2485 -7301.3535 7641.2485 c
-7298.7773 7641.2485 -7296.6909 7639.1597 -7296.6909 7636.5845 c
-7296.6909 7634.0078 -7298.7773 7631.9199 -7301.3535 7631.9199 c
f
U
%AI8_EndBrushPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Brush Manager Order)
(Adobe Brush Manager Order)
( Adobe Calligraphic Brush Tool/ 10 pt. Oval/ Adobe ArtOnPath B) -
(rush Tool/ Floral Stem/) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(10 pt. Oval)
(1 10 10 75 75 -20 110 1 0 1 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Floral Stem)
(1 / Unnamed Brush Pat 40/ / / / / 0 1 /  1 1 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
1 1 1 1 ([Registration]) 0 Xs
([Registration])
Pc
0 0 0 0 k
(White)
Pc
0 0 0 1 k
(Black)
Pc
0 1 1 0 k
(CMYK Red)
Pc
0 0 1 0 k
(CMYK Yellow)
Pc
1 0 1 0 k
(CMYK Green)
Pc
1 0 0 0 k
(CMYK Cyan)
Pc
1 1 0 0 k
(CMYK Blue)
Pc
0 1 0 0 k
(CMYK Magenta)
Pc
0.15 1 0.9 0.1 k
(C=15 M=100 Y=90 K=10)
Pc
0 0.9 0.85 0 k
(C=0 M=90 Y=85 K=0)
Pc
0 0.8 0.95 0 k
(C=0 M=80 Y=95 K=0)
Pc
0 0.5 1 0 k
(C=0 M=50 Y=100 K=0)
Pc
0 0.35 0.85 0 k
(C=0 M=35 Y=85 K=0)
Pc
0.05 0 0.9 0 k
(C=5 M=0 Y=90 K=0)
Pc
0.2 0 1 0 k
(C=20 M=0 Y=100 K=0)
Pc
0.5 0 1 0 k
(C=50 M=0 Y=100 K=0)
Pc
0.75 0 1 0 k
(C=75 M=0 Y=100 K=0)
Pc
0.85 0.1 1 0.1 k
(C=85 M=10 Y=100 K=10)
Pc
0.9 0.3 0.95 0.3 k
(C=90 M=30 Y=95 K=30)
Pc
0.75 0 0.75 0 k
(C=75 M=0 Y=75 K=0)
Pc
0.8 0.1 0.45 0 k
(C=80 M=10 Y=45 K=0)
Pc
0.7 0.15 0 0 k
(C=70 M=15 Y=0 K=0)
Pc
0.85 0.5 0 0 k
(C=85 M=50 Y=0 K=0)
Pc
1 0.95 0.05 0 k
(C=100 M=95 Y=5 K=0)
Pc
1 1 0.25 0.25 k
(C=100 M=100 Y=25 K=25)
Pc
0.75 1 0 0 k
(C=75 M=100 Y=0 K=0)
Pc
0.5 1 0 0 k
(C=50 M=100 Y=0 K=0)
Pc
0.35 1 0.35 0.1 k
(C=35 M=100 Y=35 K=10)
Pc
0.1 1 0.5 0 k
(C=10 M=100 Y=50 K=0)
Pc
0 0.95 0.2 0 k
(C=0 M=95 Y=20 K=0)
Pc
0.25 0.25 0.4 0 k
(C=25 M=25 Y=40 K=0)
Pc
0.4 0.45 0.5 0.05 k
(C=40 M=45 Y=50 K=5)
Pc
0.5 0.5 0.6 0.25 k
(C=50 M=50 Y=60 K=25)
Pc
0.55 0.6 0.65 0.4 k
(C=55 M=60 Y=65 K=40)
Pc
0.25 0.4 0.65 0 k
(C=25 M=40 Y=65 K=0)
Pc
0.3 0.5 0.75 0.1 k
(C=30 M=50 Y=75 K=10)
Pc
0.35 0.6 0.8 0.25 k
(C=35 M=60 Y=80 K=25)
Pc
0.4 0.65 0.9 0.35 k
(C=40 M=65 Y=90 K=35)
Pc
0.4 0.7 1 0.5 k
(C=40 M=70 Y=100 K=50)
Pc
0.5 0.7 0.8 0.7 k
(C=50 M=70 Y=80 K=70)
Pc
(New Pattern Swatch 2) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(New Pattern Swatch 2)
Pc
0 0 0 1 k
(C=0 M=0 Y=0 K=100)
Pc
0 0 0 0.899994 k
(C=0 M=0 Y=0 K=90)
Pc
0 0 0 0.799988 k
(C=0 M=0 Y=0 K=80)
Pc
0 0 0 0.699997 k
(C=0 M=0 Y=0 K=70)
Pc
0 0 0 0.599991 k
(C=0 M=0 Y=0 K=60)
Pc
0 0 0 0.5 k
(C=0 M=0 Y=0 K=50)
Pc
0 0 0 0.399994 k
(C=0 M=0 Y=0 K=40)
Pc
0 0 0 0.299988 k
(C=0 M=0 Y=0 K=30)
Pc
0 0 0 0.199997 k
(C=0 M=0 Y=0 K=20)
Pc
0 0 0 0.099991 k
(C=0 M=0 Y=0 K=10)
Pc
0 0 0 0.049988 k
(C=0 M=0 Y=0 K=5)
Pc
0.1 0.7 0.8 0 k
(C=10 M=70 Y=80 K=0)
Pc
0.1 0.5 0.8 0 k
(C=10 M=50 Y=80 K=0)
Pc
0.65 0.1 1 0 k
(C=65 M=10 Y=100 K=0)
Pc
0.5 0.9 0.1 0 k
(C=50 M=90 Y=10 K=0)
Pc
0.25 0.85 0.6 0.1 k
(C=25 M=85 Y=60 K=10)
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 1 255 79 79 0 50 Lb
(Layer 5) Ln
0 A
u
1 Ap
0 O
0.133333 0.372549 0.701961 0 k
0 J 0 j 1 w 10 M []0 d1 XR
1110.8809 -1293.4658 m
-303.3135 -1293.4658 L
-303.3135 -281.5674 L
1110.8809 -281.5674 L
1110.8809 -1293.4658 L
f
0 Ap
0.203922 0.607843 0.945098 0.058824 k
610.8789 -484.7651 m
604.9551 -440.1597 608.7822 -393.4434 608.7822 -339.0083 C
602.1885 -354.9893 608.4688 -404.813 604.0439 -405.6118 c
599.0205 -406.5176 600.2285 -358.6016 601.7607 -342.2856 c
603.5723 -322.9502 603.0557 -292.1851 603.0508 -292.1851 C
603.0508 -281.5674 L
597.5107 -281.5674 L
597.5107 -293.8208 L
597.5166 -935.3818 597.6484 -1281.3486 V
597.5107 -1293.4658 L
603.0508 -1293.4658 L
603.0508 -1281.3486 L
606.1855 -795.6416 603.1055 -589.6221 v
602.584 -554.8604 603.5889 -525.9346 605.4111 -494.7183 c
605.4609 -493.8589 605.4053 -531.0537 607.2393 -530.0049 C
607.2393 -529.0635 613.168 -501.959 610.8789 -484.7651 c
f
0.184314 0.533333 0.87451 0.027451 k
0 XR
678.4141 -1117.7275 m
686.6387 -1036.1982 685.2441 -931.708 678.4141 -841.3447 c
675.0322 -796.5303 663.9063 -753.2529 661.375 -709.3018 c
658.0039 -650.6084 663.7412 -592.2412 661.375 -537.3311 c
658.1963 -463.3052 678.3047 -426.8247 678.3047 -352.7026 c
678.3047 -324.5532 678.3047 -281.5674 Y
666.5889 -281.5674 L
666.4736 -320.7134 666.4736 -348.3467 v
666.4736 -416.4956 647.0576 -472.8521 650.0166 -543.4717 c
652.2344 -596.2354 646.8984 -654.1807 650.0166 -712.3701 c
652.4756 -758.1455 664.1201 -803.1494 667.0557 -850.5615 c
669.6797 -892.8174 667.0557 -940.999 667.0557 -985.6787 c
667.0557 -1033.3311 672.5068 -1082.4775 667.0557 -1120.7959 c
664.5869 -1138.1611 654.7158 -1153.9775 652.8604 -1169.9346 c
650.7959 -1187.6865 666.5889 -1219.5732 666.5889 -1237.542 c
666.5889 -1256.8135 666.5889 -1293.4658 Y
678.3047 -1293.4658 L
678.2275 -1221.3057 L
678.7002 -1195.4932 660.7441 -1192.2119 664.2188 -1166.8564 c
666.7041 -1148.7021 676.8389 -1133.3799 678.4141 -1117.7275 c
f
0.203922 0.607843 0.945098 0.058824 k
1 XR
707.418 -1046.3779 m
705.8145 -1035.6201 708.8887 -1024.1436 707.418 -1013.3408 c
705.0127 -995.6924 705.0127 -952.5264 707.418 -934.8779 c
707.9668 -930.8291 707.626 -926.6143 707.418 -922.4912 c
705.0459 -875.2822 702.6855 -800.0049 707.418 -753.1748 C
707.418 -729.7764 710.5469 -705.9287 707.418 -682.9717 c
705.0127 -665.3271 706.3965 -622.4404 707.418 -604.5107 c
708.8281 -579.6826 707.418 -393.8989 707.418 -294.7842 C
707.4121 -294.7842 707.4063 -281.5674 Y
701.7295 -281.5674 L
701.7412 -296.6152 L
701.7412 -362.082 701.7412 -427.5493 701.7412 -493.0107 c
701.7412 -501.2676 701.7412 -509.5264 701.7412 -517.7861 c
701.7412 -574.2236 701.7412 -630.667 701.7412 -687.1064 c
701.7412 -702.2412 701.7412 -717.3877 701.7412 -732.5303 c
701.7412 -793.0908 701.7412 -853.667 701.7412 -914.2275 c
701.7412 -943.1416 701.7412 -972.0459 701.7412 -1000.958 c
701.7412 -1018.8525 701.7412 -1036.7412 701.7412 -1054.6377 c
701.7412 -1065.6475 701.7412 -1076.6631 701.7412 -1087.6768 c
701.7412 -1133.1045 701.7412 -1178.5283 701.7412 -1223.9521 c
701.7412 -1230.8369 701.7412 -1237.7197 701.7412 -1244.5986 c
701.7412 -1255.9248 701.7412 -1267.251 701.7412 -1278.5674 C
701.7295 -1278.5674 L
701.7295 -1293.4658 L
707.4063 -1293.4658 L
707.4063 -1289.0518 L
707.418 -1289.0518 L
707.418 -1276.9951 707.418 -1264.9287 707.418 -1252.8584 c
707.418 -1195.0479 709.542 -1137.1514 707.418 -1079.4131 c
706.7422 -1061.0615 709.416 -1059.7979 707.418 -1046.3779 c
f
0.184314 0.533333 0.87451 0.027451 k
741.4873 -647.4873 m
731.6055 -542.499 745.0615 -435.293 742.2617 -332.5962 c
741.916 -319.876 742.2617 -281.5674 Y
730.5469 -281.5674 L
730.6182 -324.7563 730.8867 -339.1069 v
732.7256 -437.6646 723.4863 -536.0947 730.1289 -627.9502 c
732.8086 -665.0264 746.4014 -697.46 744.3262 -732.9814 c
735.8994 -877.0459 731.8584 -1028.1689 730.6289 -1181.5068 c
730.5244 -1193.6475 730.5352 -1226.3232 730.541 -1236.1006 C
730.4863 -1293.4658 L
742.2012 -1293.4658 L
742.2012 -1238.9092 L
743.5029 -1200.6201 744.249 -1185.7744 v
748.5918 -1099.8506 757.1289 -813.7803 741.4873 -647.4873 c
f
0.203922 0.607843 0.945098 0.058824 k
363.7925 -528.8057 m
362.1895 -539.5654 365.2651 -551.042 363.7925 -561.8428 c
361.3853 -579.4951 361.3853 -622.665 363.7925 -640.3154 c
364.3442 -644.3662 364 -648.583 363.7925 -652.7061 c
361.4209 -699.917 359.0615 -775.2021 363.7925 -822.0342 C
363.7925 -845.4346 366.9233 -869.2861 363.7925 -892.2471 c
361.3853 -909.8916 362.7744 -952.7842 363.7925 -970.7139 c
365.2007 -995.5439 363.7925 -1181.3447 363.7925 -1280.4697 C
363.79 -1280.4697 363.7817 -1293.4658 Y
358.1011 -1293.4658 L
358.1118 -1278.6416 L
358.1118 -1213.165 358.1118 -1147.6924 358.1118 -1082.2256 c
358.1118 -1073.9658 358.1118 -1065.708 358.1118 -1057.4482 c
358.1118 -1001.0049 358.1118 -944.5576 358.1118 -888.1104 c
358.1118 -872.9717 358.1118 -857.8193 358.1118 -842.6865 c
358.1118 -782.1123 358.1118 -721.5322 358.1118 -660.9678 c
358.1118 -632.0537 358.1118 -603.1436 358.1118 -574.2314 c
358.1118 -556.3311 358.1118 -538.4443 358.1118 -520.5459 c
358.1118 -509.5361 358.1118 -498.5176 358.1118 -487.5044 c
358.1118 -442.0698 358.1118 -396.644 358.1118 -351.2124 c
358.1118 -344.3335 358.1118 -337.4438 358.1118 -330.5649 c
358.1118 -319.2393 358.1118 -307.9136 358.1118 -296.5962 C
358.1011 -296.5962 L
358.1011 -281.5674 L
363.7817 -281.5674 L
363.7817 -286.1074 L
363.7925 -286.1074 L
363.7925 -298.1636 363.7925 -310.2358 363.7925 -322.3022 c
363.7925 -380.1221 365.9199 -438.0239 363.7925 -495.7671 c
363.1157 -514.1221 365.792 -515.3818 363.7925 -528.8057 c
f
585.3066 -528.833 m
583.7041 -539.5869 586.7725 -551.0635 585.3066 -561.8643 c
582.8975 -579.5146 582.8975 -622.6787 585.3066 -640.333 c
585.8564 -644.3779 585.5098 -648.5947 585.3066 -652.7178 c
582.9297 -699.9248 580.5752 -775.2021 585.3066 -822.0303 C
585.3066 -845.4287 588.4307 -869.2764 585.3066 -892.2393 c
582.8975 -909.8799 584.2861 -952.7666 585.3066 -970.6943 c
586.7129 -995.5225 585.3066 -1181.3096 585.3066 -1280.4229 C
585.3018 -1280.4229 585.2959 -1293.4658 Y
579.6143 -1293.4658 L
579.625 -1278.5928 L
579.625 -1213.126 579.625 -1147.6592 579.625 -1082.1982 c
579.625 -1073.9385 579.625 -1065.6846 579.625 -1057.4209 c
579.625 -1000.9854 579.625 -944.5439 579.625 -888.1025 c
579.625 -872.9658 579.625 -857.8135 579.625 -842.6807 c
579.625 -782.1123 579.625 -721.5381 579.625 -660.9795 c
579.625 -632.0693 579.625 -603.1631 579.625 -574.251 c
579.625 -556.3525 579.625 -538.4678 579.625 -520.5693 c
579.625 -509.5596 579.625 -498.5449 579.625 -487.5347 c
579.625 -442.103 579.625 -396.6797 579.625 -351.2563 c
579.625 -344.3745 579.625 -337.4849 579.625 -330.6089 c
579.625 -319.2832 579.625 -307.9575 579.625 -296.6426 C
579.6143 -296.6426 L
579.6143 -281.5674 L
585.2959 -281.5674 L
585.2959 -286.1572 L
585.3066 -286.1572 L
585.3066 -298.2129 585.3066 -310.2798 585.3066 -322.3462 c
585.3066 -380.1606 587.4316 -438.0571 585.3066 -495.7944 c
584.626 -514.1475 587.2998 -515.4092 585.3066 -528.833 c
f
0.184314 0.533333 0.87451 0.027451 k
397.8613 -927.7393 m
387.9795 -1032.7314 401.438 -1139.9502 398.6382 -1242.6553 c
398.2896 -1255.376 398.6382 -1293.4658 Y
386.9199 -1293.4658 L
386.9912 -1250.4951 387.2603 -1236.1416 v
389.1025 -1137.5732 379.8657 -1039.1338 386.5 -947.2725 c
389.1821 -910.1885 402.7749 -877.7568 400.6997 -842.2314 c
392.2754 -698.1455 388.2324 -547.0146 386.9995 -393.6602 c
386.8979 -381.522 386.9146 -348.8462 386.9199 -339.063 C
386.8599 -281.5674 L
398.5781 -281.5674 L
398.5781 -336.2578 L
399.8735 -374.5469 400.623 -389.397 v
404.9653 -475.3276 413.502 -761.4229 397.8613 -927.7393 c
f
0.094972 0.322728 0.598901 0 k
0 XR
543.7275 -795.0928 m
539.8164 -820.7197 526.0947 -836.7119 521.0078 -864.4736 c
504.4482 -954.7939 540.4395 -1010.9326 548.8154 -1073.2783 c
553.9873 -1111.7764 548.0156 -1243.9014 549.7598 -1271.3018 C
563.3691 -1151.0186 508.4609 -975.9619 523.7285 -865.1377 c
527.3955 -838.5283 546.5498 -819.7314 549.4082 -795.0928 c
570.5225 -612.7979 558.4453 -557.1611 550.71 -443.5552 c
546.1602 -376.7622 550.2324 -329.3682 Y
533.9531 -458.353 566.5479 -645.4385 543.7275 -795.0928 c
f
/BBAccumRotation (1.570796) XT
0.164706 0.482353 0.815686 0.015686 k
1 XR
957.2842 -663.5381 m
954.6113 -658.7451 954.6113 -640.7334 957.2842 -635.9346 c
1011.4199 -538.876 957.2842 -415.1255 957.2842 -304.7236 C
957.2793 -304.7236 957.2676 -304.7236 957.2568 -304.7236 C
957.2568 -281.5674 L
951.6797 -281.5674 L
951.6797 -304.7236 L
951.6572 -304.7236 951.6572 -1270.7588 951.6797 -1270.7588 C
951.6797 -1293.4658 L
957.2568 -1293.4658 L
957.2793 -1270.7588 957.2842 -1270.7588 V
957.2842 -1068.3564 1056.5361 -841.4814 957.2842 -663.5381 c
f
0.094972 0.322728 0.598901 0 k
1037.75 -887.1357 m
1036.2344 -872.1904 1026.9619 -848.1357 1026.3916 -833.8701 c
1020.4297 -684.624 1036.6797 -513.6533 1029.2295 -348.8682 C
1029.1689 -348.8682 L
1029.1689 -281.5674 L
1020.6484 -281.5674 L
1020.6543 -333.126 1020.6484 -350.3394 v
1020.6436 -375.1343 1006.2051 -717.9092 1020.709 -833.8701 c
1022.8125 -850.6885 1026.4521 -869.458 1029.2295 -887.1357 c
1033.1602 -912.1064 1034.6865 -927.9697 1029.2295 -954.4209 c
1027.5 -962.792 1026.3037 -973.7607 1026.3916 -985.2549 c
1026.7266 -1030.2959 1021.6807 -1113.1162 1020.6484 -1155.7451 c
1020.2207 -1173.3486 1020.6484 -1226.1826 Y
1020.6484 -1293.4658 L
1029.1689 -1293.4658 L
1029.1689 -1226.1826 L
1029.4658 -1159.1709 1029.4658 -1159.0771 v
1029.9434 -1130.3428 1034.9121 -1093.8486 1034.9121 -1077.7744 c
1034.9121 -1014.2783 1043.6406 -945.3174 1037.75 -887.1357 c
f
640.168 -687.9131 m
638.6523 -702.8623 629.374 -726.9131 628.8086 -741.1768 c
622.8467 -890.4307 639.0967 -1061.3955 631.6475 -1226.1807 C
631.5869 -1226.1807 L
631.5869 -1293.4658 L
623.0664 -1293.4658 L
623.0723 -1241.9209 623.0664 -1224.7158 v
623.0615 -1199.9111 608.623 -857.1416 623.127 -741.1768 c
625.2295 -724.3604 628.8691 -705.5908 631.6475 -687.9131 c
635.5723 -662.9443 637.1045 -647.085 631.6475 -620.6279 c
629.918 -612.2568 628.7207 -601.2881 628.8086 -589.792 c
629.1436 -544.7529 624.0986 -461.938 623.0664 -419.3032 c
622.6387 -401.7002 623.0664 -348.8682 Y
623.0664 -281.5674 L
631.5869 -281.5674 L
631.5869 -348.8682 L
631.8779 -415.8779 631.8779 -415.9712 v
632.3555 -444.708 637.3291 -481.1968 637.3291 -497.2739 c
637.3291 -560.7666 646.0586 -629.7334 640.168 -687.9131 c
f
0.203922 0.607843 0.945098 0.058824 k
1018.7051 -418.0298 m
1020.3359 -385.1675 1023.4434 -328.4619 1020.6328 -295.77 C
1020.874 -327.957 1018.8486 -384.835 1018.7051 -418.0298 C
f
0.164706 0.482353 0.815686 0.015686 k
873.5908 -281.5674 m
879.2734 -281.5674 884.9492 -281.5674 890.6318 -281.5674 C
890.6318 -618.8389 890.6318 -956.1982 890.6318 -1293.4658 C
884.9492 -1293.4658 879.2734 -1293.4658 873.5908 -1293.4658 C
873.5908 -956.1982 873.5908 -618.8389 873.5908 -281.5674 C
f
0.184314 0.533333 0.87451 0.027451 k
936.9336 -281.5674 m
936.9336 -399.1338 936.9336 -1226.0107 936.9336 -1293.4658 C
937.8828 -1293.4658 938.8271 -1293.4658 939.7715 -1293.4658 C
939.7715 -1226.0107 939.7715 -399.1338 939.7715 -281.5674 C
938.8271 -281.5674 937.8828 -281.5674 936.9336 -281.5674 C
f
0.164706 0.482353 0.815686 0.015686 k
909.0068 -281.5674 m
909.0068 -618.8389 909.0068 -956.1982 909.0068 -1293.4658 C
915.6328 -1293.4658 922.2588 -1293.4658 928.8857 -1293.4658 C
928.8857 -956.1963 928.8857 -618.8389 928.8857 -281.5674 C
909.0068 -281.5674 L
f
852.1641 -281.5674 m
845.9551 -281.5674 L
846.3008 -516.5342 843.6875 -552.9111 v
843.2754 -558.6748 842.2822 -564.6533 843.6875 -570.2568 c
846.125 -579.9482 847.7559 -607.4033 843.6875 -616.5107 c
836.5889 -632.4111 849.3701 -633.1318 840.8496 -645.4189 c
829.9355 -661.1611 831.873 -686.2666 840.8496 -703.2354 c
845.8174 -712.6279 847.2393 -722.7471 840.8496 -732.1455 c
773.4229 -831.2764 840.4209 -1003.5967 845.9326 -1093.8643 c
848.9961 -1144.1533 845.9551 -1255.3154 Y
845.9551 -1293.4658 L
852.1641 -1293.4658 L
852.1641 -1264.8291 852.1641 -1255.3154 v
852.1699 -1215.585 852.208 -1096.3877 Y
852.208 -1095.5459 852.1641 -281.5674 Y
f
424.792 -1293.4658 m
431.0039 -1293.4658 L
430.6528 -1058.5088 433.2715 -1022.1318 v
433.6831 -1016.3682 434.6738 -1010.3877 433.2715 -1004.7861 c
430.8364 -995.0947 429.2061 -967.6416 433.2715 -958.5322 c
440.3696 -942.6338 427.5918 -941.9092 436.1123 -929.6221 c
447.0264 -913.8818 445.0854 -888.7764 436.1123 -871.8076 c
431.1411 -862.4092 429.7222 -852.2939 436.1123 -842.8975 c
503.5342 -743.7646 436.5352 -571.4443 431.0313 -481.1802 c
427.96 -430.8872 431.0039 -319.7275 Y
431.0039 -281.5674 L
424.792 -281.5674 L
424.7949 -310.2139 424.792 -319.7275 v
424.7866 -359.458 424.751 -478.6548 Y
424.751 -479.4946 424.792 -1293.4658 Y
f
0.203922 0.607843 0.945098 0.058824 k
847.1846 -329.022 m
846.5146 -321.3115 845 -301.1992 845.9443 -292.5581 c
839.707 -349.7354 845.1592 -450.0303 845.1758 -505.5527 C
845.8008 -496.1812 846.0205 -460.4888 846.5146 -451.0981 c
849.1885 -400.0449 851.1865 -375.1206 847.1846 -329.022 c
f
0.156863 0.423529 0.756863 0.003922 k
0 XR
891.9658 -281.5674 m
891.9658 -1293.4658 L
897.6475 -1293.4658 L
897.6475 -281.5674 L
891.9658 -281.5674 L
f
0.109804 0.337255 0.658824 0 k
1 XR
875.875 -884.3408 m
874.3652 -869.3916 865.0869 -845.3389 864.5166 -831.0732 c
858.5547 -681.8252 874.8047 -510.8525 867.3545 -346.0684 C
867.2939 -346.0684 L
867.2939 -281.5674 L
858.7734 -281.5674 L
858.8672 -331.9209 858.7734 -347.5396 v
858.6367 -372.3345 844.3359 -715.1162 858.8398 -831.0732 c
860.9365 -847.8857 864.5771 -866.6592 867.3545 -884.3408 c
871.2852 -909.3096 872.8174 -925.1689 867.3545 -951.6201 c
865.625 -959.9932 864.4287 -970.9619 864.5166 -982.4561 c
864.8516 -1027.499 859.8057 -1110.3174 858.7734 -1152.9482 c
858.3516 -1170.5518 858.7734 -1223.3857 Y
858.7734 -1293.4658 L
867.2939 -1293.4658 L
867.2939 -1223.3857 L
867.5908 -1156.374 867.5908 -1156.2783 v
868.0684 -1127.5439 873.0371 -1091.0518 873.0371 -1074.9775 c
873.0371 -1011.4756 881.7656 -942.5186 875.875 -884.3408 c
f
*u
1 D
0.164706 0.482353 0.815686 0.015686 k
1079.4023 -542.9697 m
1077.9141 -529.8428 1070.1182 -518.2393 1070.8818 -505.8564 c
1072.2266 -483.9526 1090.1563 -464.3975 1090.7607 -444.8921 c
1091.6719 -415.4717 1076.5576 -398.2744 1076.5576 -362.7192 c
1076.5576 -345.272 1076.5576 -309.7085 Y
1076.5576 -281.5674 L
1060.8955 -281.5674 L
1060.8955 -310.1094 L
1060.9229 -310.1094 L
1060.9883 -401.3735 1088.0322 -386.7788 1079.4023 -428.9878 c
1074.8066 -451.4634 1048.5098 -461.0376 1042.4824 -479.3462 c
1033.8848 -505.4785 1054.626 -525.3213 1059.5234 -550.9229 c
1063.4424 -571.4287 1058.6006 -594.5029 1059.5234 -617.1865 c
1067.7959 -821.0537 1054.6426 -1067.9463 1060.8955 -1240.001 C
1060.8955 -1265.0322 L
1060.8955 -1267.0029 L
1060.8955 -1293.4658 L
1076.5576 -1293.4658 L
1076.5576 -1267.0029 L
1076.5576 -1265.0322 L
1076.5576 -1239.8838 L
1076.5693 -1239.8838 1076.5859 -1239.8838 1076.5967 -1239.8838 C
1075.2188 -1149.2354 1055.6797 -1046.0674 1076.5576 -975.0283 c
1080.0225 -963.2529 1082.2402 -937.9209 1082.2402 -924.6592 C
1075.6582 -906.0439 1080.5928 -838.1846 1082.2402 -818.6377 c
1083.4258 -804.5459 1083.3486 -790.3271 1082.2402 -776.2295 c
1076.5576 -703.8291 1087.7412 -616.6104 1079.4023 -542.9697 c
f
0 D
1082.2402 -426.3413 m
1083.2285 -420.0693 1088.1309 -436.981 1087.9219 -444.8921 C
1080.6699 -436.5005 1074.9766 -467.9165 1068.043 -476.7056 C
1058.0566 -465.9238 1078.3477 -450.9692 1082.2402 -426.3413 c
f
1070.8818 -731.1631 m
1064.3262 -700.1611 1069.8828 -634.9248 1068.043 -590.6807 C
1074.5928 -621.6826 1069.042 -686.9307 1070.8818 -731.1631 C
f
1070.8818 -582.7275 m
1068.6641 -590.5557 1066.2754 -565.1045 1068.043 -558.8682 c
1070.2607 -551.0439 1072.6436 -576.501 1070.8818 -582.7275 c
f
*U
*u
1 D
483.8389 -1032.167 m
485.3267 -1045.2939 493.125 -1056.8994 492.3589 -1069.2803 c
491.0166 -1091.1846 473.084 -1110.7451 472.48 -1130.2471 c
471.5713 -1159.665 486.6797 -1176.8643 486.6797 -1212.417 c
486.6797 -1229.8643 486.6797 -1261.1592 486.6797 -1265.0322 c
486.6797 -1265.2939 486.6797 -1265.4287 Y
486.6797 -1293.4658 L
502.3506 -1293.4658 L
502.3506 -1265.0322 L
502.3154 -1265.0322 L
502.2549 -1173.7686 475.2085 -1188.3604 483.8389 -1146.1553 c
488.4395 -1123.6729 514.7363 -1114.0986 520.7578 -1095.79 c
529.3555 -1069.6611 508.6172 -1049.8174 503.7207 -1024.2158 c
499.8037 -1003.7119 504.6396 -980.6377 503.7207 -957.9502 c
495.4497 -754.085 508.6006 -507.1943 502.3506 -335.1377 C
502.3506 -310.1064 L
502.3506 -308.1333 L
502.3506 -281.5674 L
486.6797 -281.5674 L
486.6797 -308.1333 L
486.6797 -310.1064 L
486.6797 -335.2529 L
486.6689 -335.2529 486.6577 -335.2529 486.647 -335.2529 C
488.022 -425.9077 507.5635 -529.0713 486.6797 -600.1123 c
483.2183 -611.8857 481.0005 -637.2197 481.0005 -650.4775 C
487.583 -669.0928 482.6475 -736.9541 481.0005 -756.499 c
479.8145 -770.5908 479.897 -784.8096 481.0005 -798.9111 c
486.6851 -871.3115 475.5024 -958.5283 483.8389 -1032.167 c
f
0 D
481.0005 -1148.7979 m
480.0122 -1155.0693 475.1152 -1138.1553 475.3213 -1130.2471 C
482.5762 -1138.6396 488.2661 -1107.2236 495.2002 -1098.4365 C
505.1836 -1109.2139 484.8926 -1124.167 481.0005 -1148.7979 c
f
492.3589 -843.9736 m
498.917 -874.9756 493.3638 -940.2178 495.2002 -984.4561 C
488.6479 -953.4541 494.2007 -888.2119 492.3589 -843.9736 C
f
492.3589 -992.4092 m
494.5796 -984.585 496.9624 -1010.0381 495.2002 -1016.2686 c
492.9819 -1024.0986 490.5967 -998.6357 492.3589 -992.4092 c
f
*U
0.203922 0.607843 0.945098 0.058824 k
0 XR
793.5537 -832.0479 m
788.5908 -733.4248 841.876 -623.5654 796.3926 -539.7979 c
796.2334 -539.501 796.1338 -539.126 795.9863 -538.8057 C
795.9863 -281.5674 L
776.4805 -281.5674 L
776.4805 -620.7158 L
776.667 -620.7158 L
776.5684 -630.7021 776.5137 -640.4209 776.5137 -649.7529 c
776.5137 -714.3916 773.1641 -781.6221 776.5137 -840.7295 c
778.501 -875.6807 788.3711 -908.6846 790.7158 -942.001 c
797.6162 -1040.1885 777.3203 -1106.71 776.5137 -1190.8486 c
776.4639 -1196.1299 776.4805 -1211.9678 Y
776.4805 -1293.4658 L
795.9863 -1293.4658 L
795.9863 -1232.1709 L
796.0303 -1232.1865 796.0791 -1232.2041 796.123 -1232.2217 C
796.0791 -1231.5771 796.0303 -1230.915 795.9863 -1230.2549 C
795.9863 -1211.9678 L
793.4336 -1146.3584 796.3926 -1130.085 v
808.0859 -1065.7939 812.2803 -1005.3447 807.751 -942.001 c
805.1875 -906.0107 795.4805 -870.292 793.5537 -832.0479 c
f
1 XR
93.9683 -1090.3115 m
99.8921 -1134.9229 96.064 -1181.6357 96.064 -1236.0732 C
102.6587 -1220.0869 96.3809 -1170.2666 100.8101 -1169.4697 c
105.8267 -1168.5615 104.6172 -1216.4756 103.0898 -1232.79 c
101.2783 -1252.1318 101.7969 -1282.8916 101.8022 -1282.8916 C
101.8022 -1293.4658 L
107.335 -1293.4658 L
107.335 -1281.2529 L
107.3291 -639.6982 107.2017 -293.7275 V
107.335 -281.5674 L
101.8022 -281.5674 L
101.8022 -293.7275 L
98.6665 -779.4346 101.7446 -985.4541 v
102.2661 -1020.2158 101.2642 -1049.1436 99.439 -1080.3643 c
99.3896 -1081.2197 99.4458 -1044.0225 97.6147 -1045.0713 C
97.6147 -1046.0166 91.686 -1073.1162 93.9683 -1090.3115 c
f
0.184314 0.533333 0.87451 0.027451 k
0 XR
26.4316 -457.3511 m
18.2144 -538.8779 19.6035 -643.3682 26.4316 -733.7314 c
29.8149 -778.5518 40.9443 -821.8232 43.4707 -865.7803 c
46.8433 -924.4717 41.1089 -982.835 43.4707 -1037.749 c
46.6548 -1111.7705 26.543 -1148.2568 26.543 -1222.376 c
26.543 -1250.5283 26.543 -1293.4658 Y
38.2568 -1293.4658 L
38.3765 -1254.3662 38.3765 -1226.7295 v
38.3765 -1158.583 57.7954 -1102.2295 54.8311 -1031.6045 c
52.6113 -978.8447 57.9478 -920.8936 54.8311 -862.7061 c
52.374 -816.9307 40.7314 -771.9248 37.7915 -724.5146 c
35.1699 -682.2646 37.7915 -634.0791 37.7915 -589.4014 c
37.7915 -541.751 32.3389 -492.5991 37.7915 -454.2822 c
40.2593 -436.915 50.1357 -421.1016 51.9912 -405.1479 c
54.0542 -387.3906 38.2568 -355.5054 38.2568 -337.5371 c
38.2568 -318.2676 38.2568 -281.5674 Y
26.543 -281.5674 L
26.6211 -353.7759 L
26.1489 -379.5894 44.1064 -382.8672 40.6313 -408.2192 c
38.1431 -426.3745 28.0073 -441.6968 26.4316 -457.3511 c
f
0.203922 0.607843 0.945098 0.058824 k
1 XR
-2.56885 -528.7002 m
-0.96582 -539.4561 -4.0415 -550.9346 -2.56885 -561.7354 c
-0.161621 -579.3857 -0.161621 -622.5498 -2.56885 -640.2002 c
-3.12061 -644.249 -2.77734 -648.4658 -2.56885 -652.585 c
-0.197266 -699.7979 2.16211 -775.0713 -2.56885 -821.8994 C
-2.56885 -845.3037 -5.70068 -869.1514 -2.56885 -892.1064 c
-0.161621 -909.751 -1.55176 -952.6357 -2.56885 -970.5654 c
-3.97852 -995.3916 -2.56885 -1181.1807 -2.56885 -1280.2939 C
-2.56592 -1280.2939 -2.55762 -1293.4658 Y
3.12158 -1293.4658 L
3.11035 -1278.4639 L
3.11035 -1212.9971 3.11035 -1147.5303 3.11035 -1082.0654 c
3.11035 -1073.8096 3.11035 -1065.5518 3.11035 -1057.29 c
3.11035 -1000.8506 3.11035 -944.4111 3.11035 -887.9697 c
3.11035 -872.835 3.11035 -857.6846 3.11035 -842.5518 c
3.11035 -781.9814 3.11035 -721.4131 3.11035 -660.8486 c
3.11035 -631.9385 3.11035 -603.0303 3.11035 -574.1221 c
3.11035 -556.2275 3.11035 -538.335 3.11035 -520.4385 c
3.11035 -509.4307 3.11035 -498.416 3.11035 -487.4028 c
3.11035 -441.9766 3.11035 -396.5479 3.11035 -351.127 c
3.11035 -344.2427 3.11035 -337.356 3.11035 -330.4795 c
3.11035 -319.1514 3.11035 -307.8257 3.11035 -296.5107 C
3.12158 -296.5107 L
3.12158 -281.5674 L
-2.55762 -281.5674 L
-2.55762 -286.0254 L
-2.56885 -286.0254 L
-2.56885 -298.0864 -2.56885 -310.1533 -2.56885 -322.2173 c
-2.56885 -380.0288 -4.69629 -437.9253 -2.56885 -495.6626 c
-1.89209 -514.0205 -4.56836 -515.2783 -2.56885 -528.7002 c
f
-300.7578 -528.6787 m
-299.1548 -539.4365 -302.2305 -550.915 -300.7578 -561.7158 c
-298.3506 -579.3701 -298.3506 -622.54 -300.7578 -640.1885 c
-301.3096 -644.2373 -300.9653 -648.4541 -300.7578 -652.5752 c
-298.3862 -699.79 -296.0259 -775.0713 -300.7578 -821.9053 C
-300.7578 -845.3057 -303.8887 -869.1572 -300.7578 -892.1143 c
-298.3506 -909.7588 -299.7397 -952.6494 -300.7578 -970.5771 c
-302.166 -995.4072 -300.7578 -1181.2139 -300.7578 -1280.333 C
-300.7554 -1280.333 -300.7471 -1293.4658 Y
-295.0664 -1293.4658 L
-295.0771 -1278.5029 L
-295.0771 -1213.0303 -295.0771 -1147.5596 -295.0771 -1082.0908 c
-295.0771 -1073.8311 -295.0771 -1065.5732 -295.0771 -1057.3115 c
-295.0771 -1000.8682 -295.0771 -944.4229 -295.0771 -887.9814 c
-295.0771 -872.8408 -295.0771 -857.6904 -295.0771 -842.5557 c
-295.0771 -781.9814 -295.0771 -721.4072 -295.0771 -660.8389 c
-295.0771 -631.9268 -295.0771 -603.0166 -295.0771 -574.1045 c
-295.0771 -556.208 -295.0771 -538.3154 -295.0771 -520.417 c
-295.0771 -509.4092 -295.0771 -498.3906 -295.0771 -487.3779 c
-295.0771 -441.9492 -295.0771 -396.5205 -295.0771 -351.0913 c
-295.0771 -344.207 -295.0771 -337.3174 -295.0771 -330.4438 c
-295.0771 -319.1128 -295.0771 -307.79 -295.0771 -296.4727 C
-295.0664 -296.4727 L
-295.0664 -281.5674 L
-300.7471 -281.5674 L
-300.7471 -285.9868 L
-300.7578 -285.9868 L
-300.7578 -298.0483 -300.7578 -310.1147 -300.7578 -322.1816 c
-300.7578 -379.9956 -302.8853 -437.8979 -300.7578 -495.6401 c
-300.0815 -513.999 -302.7578 -515.2549 -300.7578 -528.6787 c
f
0.184314 0.533333 0.87451 0.027451 k
-36.6362 -927.5908 m
-26.7588 -1032.5791 -40.2144 -1139.7861 -37.4131 -1242.4795 c
-37.0659 -1255.2002 -37.4131 -1293.4658 Y
-25.6992 -1293.4658 L
-25.7676 -1250.3232 -26.0366 -1235.9717 v
-27.8784 -1137.4111 -18.6406 -1038.9814 -25.2778 -947.1299 c
-27.957 -910.0498 -41.5537 -877.6182 -39.4761 -842.0967 c
-31.0518 -698.0303 -27.0098 -546.9072 -25.7759 -393.5693 c
-25.6758 -381.4312 -25.6909 -348.7583 -25.6963 -338.9751 C
-25.6372 -281.5674 L
-37.3525 -281.5674 L
-37.3525 -336.1699 L
-38.6499 -374.4565 -39.4019 -389.3066 v
-43.7417 -475.229 -52.2813 -761.2959 -36.6362 -927.5908 c
f
0.203922 0.607843 0.945098 0.058824 k
341.0576 -1046.2471 m
342.6606 -1035.4893 339.585 -1024.0127 341.0576 -1013.2119 c
343.4648 -995.5615 343.4648 -952.3975 341.0576 -934.7451 c
340.5059 -930.6982 340.8501 -926.4795 341.0576 -922.3584 c
343.4292 -875.1514 345.79 -799.874 341.0576 -753.0459 C
341.0576 -729.6475 337.9268 -705.7998 341.0576 -682.8408 c
343.4648 -665.1963 342.0757 -622.3096 341.0576 -604.3818 c
339.6494 -579.5537 341.0576 -393.7646 341.0576 -294.6528 C
341.0601 -294.6528 341.0684 -281.5674 Y
346.749 -281.5674 L
346.7383 -296.4834 L
346.7383 -361.9507 346.7383 -427.4175 346.7383 -492.8789 c
346.7383 -501.1406 346.7383 -509.3955 346.7383 -517.6553 c
346.7383 -574.0967 346.7383 -630.5322 346.7383 -686.9736 c
346.7383 -702.1104 346.7383 -717.2627 346.7383 -732.3975 c
346.7383 -792.9658 346.7383 -853.5381 346.7383 -914.0967 c
346.7383 -943.0068 346.7383 -971.9111 346.7383 -1000.8252 c
346.7383 -1018.7236 346.7383 -1036.6084 346.7383 -1054.5068 c
346.7383 -1065.5166 346.7383 -1076.5381 346.7383 -1087.542 c
346.7383 -1132.9736 346.7383 -1178.3975 346.7383 -1223.8193 c
346.7383 -1230.7021 346.7383 -1237.5889 346.7383 -1244.4678 c
346.7383 -1255.7939 346.7383 -1267.1221 346.7383 -1278.4346 C
346.749 -1278.4346 L
346.749 -1293.4658 L
341.0684 -1293.4658 L
341.0684 -1288.9189 L
341.0576 -1288.9189 L
341.0576 -1276.8643 341.0576 -1264.7959 341.0576 -1252.7295 c
341.0576 -1194.915 338.9302 -1137.0186 341.0576 -1079.2822 c
341.7344 -1060.9268 339.0576 -1059.667 341.0576 -1046.2471 c
f
119.5459 -1046.2471 m
121.1489 -1035.4893 118.0732 -1024.0127 119.5459 -1013.2119 c
121.9531 -995.5615 121.9531 -952.3975 119.5459 -934.7451 c
118.9941 -930.6982 119.3384 -926.4795 119.5459 -922.3584 c
121.9175 -875.1514 124.2778 -799.874 119.5459 -753.0459 C
119.5459 -729.6475 116.415 -705.7998 119.5459 -682.8408 c
121.9531 -665.1963 120.564 -622.3096 119.5459 -604.3818 c
118.1377 -579.5537 119.5459 -393.7646 119.5459 -294.6528 C
119.5483 -294.6528 119.5566 -281.5674 Y
125.2373 -281.5674 L
125.2266 -296.4834 L
125.2266 -361.9507 125.2266 -427.4175 125.2266 -492.8789 c
125.2266 -501.1406 125.2266 -509.3955 125.2266 -517.6553 c
125.2266 -574.0967 125.2266 -630.5322 125.2266 -686.9736 c
125.2266 -702.1104 125.2266 -717.2627 125.2266 -732.3975 c
125.2266 -792.9658 125.2266 -853.5381 125.2266 -914.0967 c
125.2266 -943.0068 125.2266 -971.9111 125.2266 -1000.8252 c
125.2266 -1018.7236 125.2266 -1036.6084 125.2266 -1054.5068 c
125.2266 -1065.5166 125.2266 -1076.5381 125.2266 -1087.542 c
125.2266 -1132.9736 125.2266 -1178.3975 125.2266 -1223.8193 c
125.2266 -1230.7021 125.2266 -1237.5889 125.2266 -1244.4678 c
125.2266 -1255.7939 125.2266 -1267.1221 125.2266 -1278.4346 C
125.2373 -1278.4346 L
125.2373 -1293.4658 L
119.5566 -1293.4658 L
119.5566 -1288.9189 L
119.5459 -1288.9189 L
119.5459 -1276.8643 119.5459 -1264.7959 119.5459 -1252.7295 c
119.5459 -1194.915 117.4199 -1137.0186 119.5459 -1079.2822 c
120.2236 -1060.9268 117.5474 -1059.667 119.5459 -1046.2471 c
f
0.184314 0.533333 0.87451 0.027451 k
306.9897 -647.3545 m
316.8691 -542.3701 303.4131 -435.1611 306.2129 -332.4644 c
306.5605 -319.7441 306.2129 -281.5674 Y
317.9287 -281.5674 L
317.8584 -324.6245 317.5894 -338.9751 v
315.749 -437.5352 324.9858 -535.9658 318.3501 -627.8213 c
315.6709 -664.8994 302.0737 -697.3291 304.1504 -732.8506 c
312.5762 -876.9189 316.6167 -1028.04 317.8506 -1181.3779 c
317.9507 -1193.5166 317.937 -1226.1924 317.9312 -1235.9717 C
317.9888 -1293.4658 L
306.2749 -1293.4658 L
306.2749 -1238.7783 L
304.9766 -1200.4912 304.2256 -1185.6377 v
299.8848 -1099.7158 291.3467 -813.6533 306.9897 -647.3545 c
f
0.094972 0.322728 0.598901 0 k
-286.5859 -687.9404 m
-285.0718 -702.8896 -275.7954 -726.9404 -275.2256 -741.2041 c
-269.2637 -890.458 -285.5151 -1061.4229 -278.0669 -1226.208 C
-278.0049 -1226.208 L
-278.0049 -1293.4658 L
-269.4863 -1293.4658 L
-269.4917 -1241.9482 -269.4863 -1224.7432 v
-269.478 -1199.9443 -255.042 -857.1689 -269.5464 -741.2041 c
-271.6489 -724.3877 -275.2876 -705.6182 -278.0669 -687.9404 c
-281.9937 -662.9717 -283.5239 -647.1084 -278.0669 -620.6611 c
-276.3359 -612.2842 -275.1382 -601.3154 -275.2256 -589.8193 c
-275.562 -544.7803 -270.5166 -461.9683 -269.4863 -419.3335 c
-269.0581 -401.7246 -269.4863 -348.8984 Y
-269.4863 -281.5674 L
-278.0049 -281.5674 L
-278.0049 -348.8984 L
-278.2988 -415.9077 -278.2988 -415.9985 v
-278.7764 -444.7324 -283.7461 -481.2266 -283.7461 -497.3042 c
-283.7461 -560.7979 -292.4766 -629.7588 -286.5859 -687.9404 c
f
64.6836 -887.1631 m
66.1992 -872.2139 75.4756 -848.1631 76.0439 -833.8994 c
82.0059 -684.6494 65.7544 -513.6807 73.2041 -348.8984 C
73.2646 -348.8984 L
73.2646 -281.5674 L
81.7847 -281.5674 L
81.7793 -333.1558 81.7847 -350.3643 v
81.793 -375.1621 96.2285 -717.9365 81.7231 -833.8994 c
79.6216 -850.71 75.9834 -869.4854 73.2041 -887.1631 c
69.2773 -912.1318 67.7456 -927.9912 73.2041 -954.4443 c
74.9351 -962.8193 76.1328 -973.7881 76.0439 -985.2842 c
75.709 -1030.3232 80.7529 -1113.1377 81.7847 -1155.7725 c
82.2119 -1173.376 81.7847 -1226.208 Y
81.7847 -1293.4658 L
73.2646 -1293.4658 L
73.2646 -1226.208 L
72.9707 -1159.1982 72.9707 -1159.1045 v
72.4946 -1130.3721 67.5234 -1093.8799 67.5234 -1077.7998 c
67.5234 -1014.3096 58.793 -945.3428 64.6836 -887.1631 c
f
0.164706 0.482353 0.815686 0.015686 k
-168.7412 -1293.4658 m
-185.7803 -1293.4658 L
-185.7803 -956.1963 -185.7803 -618.8936 -185.7803 -281.6226 C
-180.1011 -281.6226 -174.4219 -281.5674 -168.7412 -281.5674 C
-168.7412 -618.8389 -168.7412 -956.1963 -168.7412 -1293.4658 C
f
0.184314 0.533333 0.87451 0.027451 k
-232.085 -1293.4658 m
-232.085 -349.022 -232.085 -281.5674 V
-233.0332 -281.5674 -233.9761 -281.5674 -234.9243 -281.5674 C
-234.9243 -349.022 -234.9243 -1293.4658 Y
-232.085 -1293.4658 L
f
1105.501 -1293.4658 m
1105.501 -1175.9053 1105.501 -281.5674 Y
1102.6621 -281.5674 L
1102.6621 -1175.9053 1102.6621 -1293.4658 V
1103.6123 -1293.4658 1104.5566 -1293.4658 1105.501 -1293.4658 C
f
0.164706 0.482353 0.815686 0.015686 k
-204.1563 -1293.4658 m
-204.1563 -956.1963 -204.1563 -618.833 -204.1563 -281.5674 C
-210.7827 -281.5674 -217.4102 -281.5674 -224.0366 -281.5674 C
-224.0366 -618.833 -224.0366 -956.1436 -224.0366 -1293.4092 C
-204.1563 -1293.4658 L
f
-147.3154 -1293.4658 m
-141.1021 -1293.4658 L
-141.4551 -1058.5459 -138.8389 -1022.165 v
-138.4258 -1016.4014 -137.4336 -1010.4229 -138.8389 -1004.8232 c
-141.2739 -995.1279 -142.9058 -967.6748 -138.8389 -958.5654 c
-131.7393 -942.667 -144.5195 -941.9463 -135.9995 -929.6611 c
-125.084 -913.915 -127.0249 -888.8076 -135.9995 -871.8408 c
-140.9692 -862.4482 -142.3896 -852.3271 -135.9995 -842.9346 c
-68.5737 -743.7979 -135.5723 -571.4814 -141.0801 -481.2158 c
-144.1475 -430.9253 -141.1021 -319.7632 Y
-141.1021 -281.5674 L
-147.3154 -281.5674 L
-147.3154 -310.2466 -147.3154 -319.7632 v
-147.3208 -359.4912 -147.3594 -478.6875 Y
-147.3594 -479.5332 -147.3154 -1293.4658 Y
f
280.0581 -281.5674 m
273.8462 -281.5674 L
274.1963 -516.5732 271.5801 -552.9443 v
271.167 -558.708 270.1748 -564.6904 271.5801 -570.292 c
274.0146 -579.9873 275.6455 -607.4365 271.5801 -616.542 c
264.4805 -632.4424 277.2593 -633.165 268.7402 -645.4521 c
257.8252 -661.1943 259.7656 -686.2998 268.7402 -703.2686 c
273.71 -712.665 275.1309 -722.7842 268.7402 -732.1787 c
201.3179 -831.3115 268.3164 -1003.6377 273.8213 -1093.8955 c
276.8916 -1144.1924 273.8462 -1255.3486 Y
273.8462 -1293.4658 L
280.0581 -1293.4658 L
280.0552 -1264.8623 280.0581 -1255.3486 v
280.0635 -1215.6182 280.1006 -1096.4209 Y
280.1006 -1095.5811 280.0581 -281.5674 Y
f
0.156863 0.423529 0.756863 0.003922 k
0 XR
-187.1172 -1293.4658 m
-187.1172 -281.5674 L
-192.7979 -281.5674 L
-192.7979 -1293.4658 L
-187.1172 -1293.4658 L
f
0.109804 0.337255 0.658824 0 k
1 XR
-171.0264 -687.9404 m
-169.5122 -702.8896 -160.2358 -726.9404 -159.6675 -741.2041 c
-153.7041 -890.458 -169.9556 -1061.4229 -162.5073 -1226.208 C
-162.4453 -1226.208 L
-162.4453 -1293.4658 L
-153.9268 -1293.4658 L
-154.0156 -1240.3584 -153.9268 -1224.7432 v
-153.7881 -1199.9443 -139.4824 -857.1689 -153.9868 -741.2041 c
-156.0894 -724.3877 -159.728 -705.6182 -162.5073 -687.9404 c
-166.4341 -662.9717 -167.9658 -647.1084 -162.5073 -620.6611 c
-160.7793 -612.2842 -159.5811 -601.3154 -159.6675 -589.8193 c
-160.0024 -544.7803 -154.9585 -461.9683 -153.9268 -419.3335 c
-153.5024 -401.7246 -153.9268 -348.8984 Y
-153.9268 -281.5674 L
-162.4453 -281.5674 L
-162.4453 -348.8984 L
-162.7407 -415.9077 -162.7432 -415.9985 v
-163.2168 -444.7324 -168.1865 -481.2266 -168.1865 -497.3042 c
-168.1865 -560.7979 -176.917 -629.7588 -171.0264 -687.9404 c
f
*u
1 D
0.164706 0.482353 0.815686 0.015686 k
150.8301 -1032.1084 m
152.3164 -1045.2334 160.1118 -1056.8389 159.3486 -1069.2217 c
158.0039 -1091.126 140.0752 -1110.6787 139.4697 -1130.1904 c
138.5571 -1159.6045 153.6694 -1176.8037 153.6694 -1212.3564 c
153.6694 -1229.8037 153.6694 -1261.0967 153.6694 -1264.9717 c
153.6694 -1265.2354 153.6694 -1265.3682 Y
153.6694 -1293.4658 L
169.3364 -1293.4658 L
169.3364 -1264.9717 L
169.3062 -1264.9717 L
169.2417 -1173.7021 142.1958 -1188.2998 150.8301 -1146.0889 c
155.4248 -1123.6123 181.7217 -1114.0439 187.748 -1095.7295 c
196.3452 -1069.5986 175.603 -1049.7568 170.709 -1024.1553 c
166.7905 -1003.6533 171.6299 -980.5732 170.709 -957.8896 c
162.4355 -754.0283 175.5894 -507.1299 169.3364 -335.0718 C
169.3364 -310.0435 L
169.3364 -308.0781 L
169.3364 -281.5674 L
153.6694 -281.5674 L
153.6694 -308.0781 L
153.6694 -310.0435 L
153.6694 -335.1929 L
153.6587 -335.1929 153.645 -335.1929 153.6338 -335.1929 C
155.0117 -425.8472 174.5532 -529.0107 153.6694 -600.0518 c
150.2056 -611.8291 147.9902 -637.1553 147.9902 -650.417 C
154.5713 -669.0342 149.6343 -736.8916 147.9902 -756.4385 c
146.8032 -770.5303 146.8828 -784.749 147.9902 -798.8467 c
153.6724 -871.249 142.4907 -958.4717 150.8301 -1032.1084 c
f
0 D
147.9902 -1148.7354 m
146.9995 -1155.0107 142.1025 -1138.1006 142.3096 -1130.1904 C
149.5615 -1138.5791 155.2534 -1107.165 162.1885 -1098.376 C
172.1704 -1109.1533 151.8838 -1124.1104 147.9902 -1148.7354 c
f
159.3486 -843.9131 m
165.9023 -874.9189 160.3506 -940.1572 162.1885 -984.3955 C
155.6362 -953.3994 161.188 -888.1494 159.3486 -843.9131 C
f
159.3486 -992.3506 m
161.5684 -984.5264 163.9536 -1009.9775 162.1885 -1016.2119 c
159.9707 -1024.0381 157.585 -998.5752 159.3486 -992.3506 c
f
*U
*u
1 D
221.0088 -542.9111 m
219.522 -529.7842 211.7266 -518.1826 212.4897 -505.7998 c
213.8345 -483.8921 231.7632 -464.3315 232.3687 -444.8315 c
233.2813 -415.4111 218.1689 -398.2168 218.1689 -362.6616 c
218.1689 -345.2144 218.1689 -313.9194 218.1689 -310.0488 c
218.1689 -309.7856 218.1689 -309.6484 Y
218.1689 -281.5674 L
202.502 -281.5674 L
202.502 -310.0488 L
202.5322 -310.0488 L
202.5967 -401.3101 229.6416 -386.7207 221.0088 -428.9272 c
216.4136 -451.4028 190.1172 -460.98 184.0903 -479.2886 c
175.4932 -505.4121 196.2339 -525.2607 201.1299 -550.8623 c
205.0479 -571.3682 200.209 -594.4365 201.1299 -617.126 c
209.4014 -820.9932 196.2476 -1067.8857 202.502 -1239.9385 C
202.502 -1264.9717 L
202.502 -1266.9424 L
202.502 -1293.4658 L
218.1689 -1293.4658 L
218.1689 -1266.9424 L
218.1689 -1264.9717 L
218.1689 -1239.8232 L
218.1797 -1239.8232 218.1938 -1239.8232 218.2046 -1239.8232 C
216.8267 -1149.1748 197.2852 -1046.0107 218.1689 -974.9639 c
221.6333 -963.1924 223.8481 -937.8564 223.8481 -924.5986 C
217.2671 -905.9834 222.2041 -838.1221 223.8481 -818.583 c
225.0356 -804.4873 224.9546 -790.2666 223.8481 -776.165 c
218.166 -703.7646 229.3477 -616.5479 221.0088 -542.9111 c
f
0 D
223.8481 -426.2783 m
224.8394 -420.0117 229.7363 -436.9204 229.5288 -444.8315 C
222.2754 -436.4429 216.585 -467.856 209.6484 -476.6426 C
199.668 -465.8633 219.9546 -450.9141 223.8481 -426.2783 c
f
212.4897 -731.1045 m
205.936 -700.1006 211.4878 -634.8623 209.6484 -590.6201 C
216.2021 -621.626 210.6504 -686.8682 212.4897 -731.1045 C
f
212.4897 -582.667 m
210.2705 -590.4951 207.8848 -565.0381 209.6484 -558.8096 c
211.8682 -550.9834 214.2534 -576.4404 212.4897 -582.667 c
f
*U
0.203922 0.607843 0.945098 0.058824 k
0 XR
-88.7051 -743.0322 m
-83.7397 -841.6572 -137.0259 -951.5166 -91.5464 -1035.2803 c
-91.3843 -1035.5713 -91.2827 -1035.9502 -91.1416 -1036.2744 C
-91.1416 -1293.4658 L
-71.6304 -1293.4658 L
-71.6304 -954.3604 L
-71.8198 -954.3604 L
-71.7197 -944.3799 -71.666 -934.6572 -71.666 -925.3291 c
-71.666 -860.6846 -68.3159 -793.4561 -71.666 -734.3486 c
-73.6494 -699.3955 -83.5254 -666.3936 -85.8657 -633.0752 c
-92.772 -534.8877 -72.4702 -468.3696 -71.666 -384.2314 c
-71.6167 -378.9526 -71.6304 -363.1143 Y
-71.6304 -281.5674 L
-91.1416 -281.5674 L
-91.1416 -342.9063 L
-91.1855 -342.8896 -91.2266 -342.873 -91.272 -342.8564 C
-91.2266 -343.499 -91.1826 -344.1631 -91.1416 -344.8276 C
-91.1416 -363.1143 L
-88.5845 -428.7129 -91.5464 -444.9961 v
-103.2383 -509.2822 -107.4287 -569.7314 -102.9048 -633.0752 c
-100.334 -669.0693 -90.6309 -704.7803 -88.7051 -743.0322 c
f
0.184314 0.533333 0.87451 0.027451 k
1 XR
557.7207 -530.4736 m
553.0811 -705.624 558.1543 -878.3662 v
559.1533 -912.5186 559.3232 -929.2021 556.1992 -982.9326 c
552.335 -1049.4834 550.4355 -1185.1885 y
568.6895 -992.1748 570.248 -911.2959 v
574.0967 -711.9307 573.3389 -638.3994 557.7207 -530.4736 c
f
U
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
Adobe_screens_AI5 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
